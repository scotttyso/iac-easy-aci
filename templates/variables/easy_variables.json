{
    "components": {
        "schemas": {
            "easy_aci": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "classes": {
                                "enum": [
                                    "access",
                                    "admin",
                                    "fabric",
                                    "switch",
                                    "system_settings",
                                    "templates",
                                    "tenants",
                                    "virtual_networking"
                                ]
                            },
                            "class.access": {
                                "directory": "access-policies",
                                "enum": [
                                    "interfaces",
                                    "physical_and_external_domains",
                                    "policies",
                                    "pools",
                                    "switches"
                                ]
                            },
                            "class.admin": {
                                "directory": "admin",
                                "enum": [
                                    "admin"
                                ]
                            },
                            "class.fabric": {
                                "directory": "fabric-policies",
                                "enum": [
                                    "fabric"
                                ]
                            },
                            "class.switch": {
                                "directory": "switches",
                                "enum": [
                                    "switch_profiles",
                                    "vpc_domains"
                                ]
                            },
                            "class.system_settings": {
                                "directory": "system-settings",
                                "enum": [
                                    "system_settings"
                                ]
                            },
                            "class.templates": {
                                "directory": "tenants",
                                "enum": [
                                    "templates"
                                ]
                            },
                            "class.tenants": {
                                "directory": "tenants",
                                "enum": [
                                    "tenant"
                                ]
                            },
                            "class.virtual_networking": {
                                "directory": "virtual-networking",
                                "enum": [
                                    "virtual_networking"
                                ]
                            },
                            "files": {
                                "description": "Files to Pull down from the Easy ACI Project.",
                                "access": [
                                    "README.md",
                                    "data_sources.tf",
                                    "domains_layer3.tf",
                                    "domains_physical.tf",
                                    "global_attachable_access_entity_profiles.tf",
                                    "global_dhcp_relay.tf",
                                    "leaf_interfaces_policy_groups_access.tf",
                                    "leaf_interfaces_policy_groups_breakout.tf",
                                    "leaf_interfaces_policy_groups_bundle.tf",
                                    "locals.tf",
                                    "outputs.tf",
                                    "policies_cdp_interface.tf",
                                    "policies_fibre_channel_interface.tf",
                                    "policies_l2_interface.tf",
                                    "policies_link_level.tf",
                                    "policies_lldp_interface.tf",
                                    "policies_mcp_interface.tf",
                                    "policies_port_channel.tf",
                                    "policies_port_security.tf",
                                    "policies_spanning_tree_interface.tf",
                                    "pools_vlan.tf",
                                    "provider.tf",
                                    "spine_interface_policy_groups.tf",
                                    "switches_leaf_policy_groups.tf",
                                    "switches_spine_policy_groups.tf",
                                    "variables.tf",
                                    "virtual_networking.tf",
                                    "vpc_domain_policies.tf"
                                ],
                                "admin": [
                                    "README.md",
                                    "authentication.tf",
                                    "configuration_backups.tf",
                                    "data_sources.tf",
                                    "firmware.tf",
                                    "locals.tf",
                                    "outputs.tf",
                                    "provider.tf",
                                    "radius.tf",
                                    "security.tf",
                                    "tacacs.tf",
                                    "variables.tf"
                                ],
                                "fabric": [
                                    "README.md",
                                    "date_and_time.tf",
                                    "dns_profiles.tf",
                                    "fabric_node_controls.tf",
                                    "l3_interface.tf",
                                    "locals.tf",
                                    "outputs.tf",
                                    "pod_profiles.tf",
                                    "provider.tf",
                                    "smart_callhome.tf",
                                    "snmp_policies.tf",
                                    "syslog.tf",
                                    "variables.tf"
                                ],
                                "switch": [
                                    "README.md",
                                    "locals.tf",
                                    "outputs.tf",
                                    "provider.tf",
                                    "switch_profiles.tf",
                                    "variables.tf",
                                    "vpc_domains.tf"
                                ],
                                "system_settings": [
                                    "README.md",
                                    "apic_connectivity_preference.tf",
                                    "bgp_autonomous_system_number.tf",
                                    "bgp_route_reflectors.tf",
                                    "coop_group.tf",
                                    "data_sources.tf",
                                    "endpoint_controls.tf",
                                    "fabric_wide_settings.tf",
                                    "global_aes_encryption_settings.tf",
                                    "isis_policy.tf",
                                    "locals.tf",
                                    "outputs.tf",
                                    "port_tracking.tf",
                                    "provider.tf",
                                    "variables.tf"
                                ],
                                "tenant": [
                                    "README.md",
                                    "apics_inband_mgmt_addresses.tf",
                                    "application_epgs.tf",
                                    "application_profiles.tf",
                                    "bridge_domains.tf",
                                    "contracts.tf",
                                    "filters.tf",
                                    "l3out_logical_node_profiles.tf",
                                    "l3outs.tf",
                                    "locals.tf",
                                    "outputs.tf",
                                    "policies_bgp_address_family_context.tf",
                                    "policies_bgp_best_path.tf",
                                    "policies_bgp_peer_prefix.tf",
                                    "policies_bgp_route_summarization.tf",
                                    "policies_bgp_timers.tf",
                                    "policies_bfd_interface.tf",
                                    "policies_dhcp_option.tf",
                                    "policies_dhcp_relay.tf",
                                    "policies_eigrp_interface.tf",
                                    "policies_endpoint_retention.tf",
                                    "policies_hsrp_interface.tf",
                                    "policies_hsrp_group.tf",
                                    "policies_ospf_interface.tf",
                                    "policies_ospf_route_summarization.tf",
                                    "policies_ospf_timers.tf",
                                    "provider.tf",
                                    "route_map_match_rules.tf",
                                    "route_map_set_rules.tf",
                                    "route_maps_for_route_control.tf",
                                    "schemas.tf",
                                    "tenants.tf",
                                    "variables.tf",
                                    "vrfs.tf"
                                ]
                            },
                            "latest_versions": {
                                "aci_provider_version": "",
                                "ndo_provider_version": "",
                                "terraform_version": "",
                                "utils_provider_version": ""
                            },
                            "processes": {
                                "enum": [
                                    "access",
                                    "admin",
                                    "fabric",
                                    "switches",
                                    "system_settings",
                                    "virtual_networking",
                                    "tenants"
                                ]
                            },
                            "siteDict": {
                                "sensitive_vars": [
                                ],
                                "site_settings": {}
                            },
                            "version": "2.0"
                        }
                    }
                ]
            },
            "access.domains.Physical": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "optional_args": {
                            },
                            "required_args": {
                                "name": "",
                                "site_group": "",
                                "vlan_pool": ""
                            },
                            "vlan_pool": {
                                "description": "Name of the VLAN Pool to Associate to the Domain.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.domains.Layer3": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "optional_args": {
                            },
                            "required_args": {
                                "name": "",
                                "site_group": "",
                                "vlan_pool": ""
                            },
                            "vlan_pool": {
                                "description": "Name of the VLAN Pool to Associate to the Domain.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.global.attachableAccessEntityProfile": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "infra_vlan": {
                                "description": "Flag to Include the Infrastructure VLAN.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "l3_domains": {
                                "description": "Names of a Layer3 Domains.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "description": "",
                                "l3_domains": "",
                                "physical_domains": "",
                                "vmm_domains": ""
                            },
                            "physical_domains": {
                                "description": "Names of a Physical Domains.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "infra_vlan": "",
                                "name": "",
                                "site_group": ""
                            },
                            "vmm_domains": {
                                "description": "Name(s) of Virtual Networking Domains.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.policies.cdpInterface": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "optional_args": {
                                "description": "",
                                "global_alias": ""
                            },
                            "required_args": {
                                "admin_state": "",
                                "name": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "access.policies.fibreChannelInterface": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "auto_max_speed": {
                                "description": "Auto-max-speed for object interface FC policy.",
                                "type": "list_of_values",
                                "enum": [
                                    "4G",
                                    "8G",
                                    "16G",
                                    "32G"
                                ],
                                "default": "32G",
                                "x-omitempty": true
                            },
                            "fill_pattern": {
                                "description": "Fill Pattern for native FC ports.",
                                "type": "list_of_values",
                                "enum": [
                                    "ARBFF",
                                    "IDLE"
                                ],
                                "default": "ARBFF",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "description": ""
                            },
                            "port_mode": {
                                "description": "In which mode Ports should be used.",
                                "type": "list_of_values",
                                "enum": [
                                    "f",
                                    "np"
                                ],
                                "default": "f",
                                "x-omitempty": true
                            },
                            "receive_buffer_credit": {
                                "description": "Receive buffer credits for native FC ports.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 16,
                                "maximum": 64,
                                "default": 64,
                                "x-omitempty": true
                            },
                            "required_args": {
                                "auto_max_speed": "",
                                "fill_pattern": "",
                                "name": "",
                                "port_mode": "",
                                "receive_buffer_credit": "",
                                "speed": "",
                                "trunk_mode": ""
                            },
                            "speed": {
                                "description": "CPU or port speed.",
                                "type": "list_of_values",
                                "enum": [
                                    "4G",
                                    "8G",
                                    "16G",
                                    "32G",
                                    "auto"
                                ],
                                "default": "auto",
                                "x-omitempty": true
                            },
                            "trunk_mode": {
                                "description": "Trunking on/off for native FC ports.",
                                "type": "list_of_values",
                                "enum": [
                                    "un-init",
                                    "trunk-off",
                                    "trunk-on",
                                    "auto"
                                ],
                                "default": "trunk-off",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.policies.L2Interface": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "optional_args": {
                                "description": ""
                            },
                            "QinQ": {
                                "description": "To enable or disable an interface for Dot1q Tunnel or Q-in-Q encapsulation modes",
                                "type": "list_of_values",
                                "enum": [
                                    "corePort",
                                    "disabled",
                                    "doubleQtagPort",
                                    "edgePort"
                                ],
                                "default": "disabled",
                                "x-omitempty": true
                            },
                            "reflective_relay": {
                                "description": "Enable or disable reflective relay for ports that consume the policy.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "disabled",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "name": "",
                                "QinQ": "",
                                "reflective_relay": "",
                                "site_group": "",
                                "vlan_scope": ""
                            },
                            "vlan_scope": {
                                "description": "The layer 2 interface VLAN scope.",
                                "type": "list_of_values",
                                "enum": [
                                    "global",
                                    "portlocal"
                                ],
                                "default": "global",
                                "x-omitempty": true
                            }

                        }
                    }
                ]
            },
            "access.policies.linkLevel": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "auto_negotiation": {
                                "description": "Policy auto negotiation for object fabric if pol.",
                                "type": "list_of_values",
                                "enum": [
                                    "off",
                                    "on",
                                    "on-enforce"
                                ],
                                "default": "on",
                                "x-omitempty": true
                            },
                            "emi_retrain": {
                                "description": "The electromagnetic interference (EMI) retrain feature filters any noise on a link due to electromagnetic interference, and retrains the link to avoid a link flap. Enable EMI retrain if your data center environment has a lot of EMI noise.",
                                "type": "list_of_values",
                                "enum": [
                                    "disable",
                                    "enable"
                                ],
                                "default": "disable",
                                "x-omitempty": true
                            },
                            "forwarding_error_correction": {
                                "description": "Forwarding Error Correction (FEC) is a method of obtaining error control in data transmission over an unreliable or noisy channel in which the source (transmitter) encodes the data in a redundant way using Error Correcting Code and the destination (receiver) recognizes it and corrects the errors without needing a retransmission.",
                                "type": "list_of_values",
                                "enum": [
                                    "inherit",
                                    "auto-fec",
                                    "cl74-fc-fec",
                                    "cl91-rs-fec",
                                    "cons16-rs-fec",
                                    "disable-fec",
                                    "ieee-rs-fec",
                                    "kp-fec"
                                ],
                                "default": "f",
                                "x-omitempty": true
                            },
                            "link_debounce_interval": {
                                "description": "The interface policy administrative port link debounce interval. Enables the debounce timer for physical interface ports and sets it for a specified amount of time in milliseconds. The debounce timer is disabled if you specify a value of 0.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 5000,
                                "default": 0,
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "description": "",
                                "global_alias": ""
                            },
                            "physical_media_type": {
                                "description": "The trasnceiver type.",
                                "type": "list_of_values",
                                "enum": [
                                    "auto",
                                    "sfp_10g_tx"
                                ],
                                "default": "auto",
                                "x-omitempty": true
                            },
                            "port_delay_when_coming_up": {
                                "description": "The time in milliseconds that the DFE tuning is delayed when a port is coming up. The delay is used to help avoid CRC errors during link bringup. You should set the delay only as required; in most cases, you do not need to set a delay.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 10000,
                                "default": 0,
                                "x-omitempty": true
                            },
                            "required_args": {
                                "auto_negotiation": "",
                                "emi_retrain": "",
                                "forwarding_error_correction": "",
                                "link_debounce_interval": "",
                                "name": "",
                                "physical_media_type": "",
                                "port_delay_when_coming_up": "",
                                "site_group": "",
                                "speed": ""
                            },
                            "speed": {
                                "description": "The interface policy administrative port speed. The data transfer rate for the port should match the destination to which the port is linked. The administrative speed can be changed only for certain ports, and not all speeds are available on all systems. For more information, see the Hardware Installation Guide for your fabric interconnect.",
                                "type": "list_of_values",
                                "enum": [
                                    "inherit",
                                    "100M",
                                    "1G",
                                    "10G",
                                    "25G",
                                    "40G",
                                    "50G",
                                    "100G",
                                    "200G",
                                    "400G"
                                ],
                                "default": "inherit",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.policies.lldpInterface": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "optional_args": {
                                "description": "",
                                "global_alias": ""
                            },
                            "receive_state": {
                                "description": "The reception of LLDP packets on an interface.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "disabled",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "name": "",
                                "receive_state": "",
                                "site_group": "",
                                "transmit_state": ""
                            },
                            "transmit_state": {
                                "description": "The transmission of LLDP packets on an interface.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "disabled",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.policies.mcpInterface": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "optional_args": {
                                "description": ""
                            },
                            "required_args": {
                                "admin_state": "",
                                "name": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "access.policies.PortChannel": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "fast_select_hot_standby_ports": {
                                "description": "Configures fast select for hot standby ports. Enabling this feature will allow fast selection of a hot standby port when last active port in the port-channel is going down.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "graceful_convergence": {
                                "description": "Configures port-channel LACP graceful convergence. Disable this only with LACP ports connected to a Non-Nexus peer. Disabling this with Nexus peer can lead to port suspension.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "load_defer_member_ports": {
                                "description": "Configures the load-balancing algorithm for port channels that applies to the entire device or to only one module.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "mode": {
                                "description": "Port-channel policy mode.",
                                "type": "list_of_values",
                                "enum": [
                                    "active",
                                    "mac-pin",
                                    "mac-pin-nicload",
                                    "off",
                                    "passive"
                                ],
                                "default": "active",
                                "x-omitempty": true
                            },
                            "maximum_number_of_links": {
                                "description": "Maximum number of links.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 16,
                                "default": 16,
                                "x-omitempty": true
                            },
                            "minimum_number_of_links": {
                                "description": "Minimum number of links in port channel.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 16,
                                "default": 1,
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "description": "",
                                "global_alias": ""
                            },
                            "required_args": {
                                "fast_select_hot_standby_ports": "",
                                "graceful_convergence": "",
                                "load_defer_member_ports": "",
                                "maximum_number_of_links": "",
                                "minimum_number_of_links": "",
                                "mode": "",
                                "name": "",
                                "site_group": "",
                                "suspend_individual_port": "",
                                "symmetric_hashing": ""
                            },
                            "suspend_individual_port": {
                                "description": "LACP sets a port to the suspended state if it does not receive an LACP bridge protocol data unit (BPDU) from the peer ports in a port channel. This can cause some servers to fail to boot up as they require LACP to logically bring up the port.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "symmetric_hashing": {
                                "description": "Bidirectional traffic is forced to use the same physical interface and each physical interface in the port channel is effectively mapped to a set of flows.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.policies.portSecurity": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "optional_args": {
                                "description": ""
                            },
                            "maximum_endpoints": {
                                "description": "The maximum number of endpoints that can be learned on the interface.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 12000,
                                "default": 0,
                                "x-omitempty": true
                            },
                            "port_security_timeout": {
                                "description": "The delay time before MAC learning is re-enabled.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 60,
                                "maximum": 3600,
                                "default": 60,
                                "x-omitempty": true
                            },
                            "required_args": {
                                "name": "",
                                "maximum_endpoints": "",
                                "port_security_timeout": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "access.policies.spanningTreeInterface": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "optional_args": {
                                "description": "",
                                "global_alias": ""
                            },
                            "filter": {
                                "description": "The interface level control that enables the BPDU filter for extended chassis ports.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "disabled",
                                "x-omitempty": true
                            },
                            "guard": {
                                "description": "The interface level control that enables the BPDU guard for extended chassis ports.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "disabled",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "name": "",
                                "filter": "",
                                "guard": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "access.policyGroups.leafAccessPort": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "attachable_entity_profile": {
                                "description": "Name of the Attachable Access Entity Profile.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "copp_interface_policy": {
                                "description": "Name of the Control Plane Policing Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "data_plane_policing_egress": {
                                "description": "Name of the egress Data Plane Policing Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "data_plane_policing_ingress": {
                                "description": "Name of the ingress Data Plane Policing Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "dot1x_port_authentication_policy": {
                                "description": "Name of the 802.1x Port Authentication Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "dwdm_policy": {
                                "description": "Name of the DWDM Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "fibre_channel_interface_policy": {
                                "description": "Name of the Fibre Channel Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "l2_interface_policy": {
                                "description": "Name of the L2 Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "link_flap_policy": {
                                "description": "Name of the Link Flap Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "link_level_flow_control_policy": {
                                "description": "Name of the Link Level Flow Control Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "link_level_policy": {
                                "description": "Name of the Link Level Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "macsec_policy": {
                                "description": "Name of the MacSec Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "mcp_interface_policy": {
                                "description": "Name of the Mis-Cabling Protocol Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "monitoring_policy": {
                                "description": "Name of the Monitoring Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "netflow_monitor_policies": {
                                "description": "A NetFlow Monitor Policies identifies packet flows for ingress IP packets and provides statistics based on these packet flows.  This should be configured as a list of strings with each string having a colon to seperate the policy name and the filter type.  There are three IP Filter types: * ce * ipv4 * ipv6. So to do a list of these you would do: 'default:ce,default:ipv4,my_policy:ipv6'",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^(ce|ipv(4|6)):[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "cdp_interface_policy": "",
                                "copp_interface_policy": "",
                                "data_plane_policing_egress": "",
                                "data_plane_policing_ingress": "",
                                "description": "",
                                "dot1x_port_authentication_policy": "",
                                "dwdm_policy": "",
                                "fibre_channel_interface_policy": "",
                                "l2_interface_policy": "",
                                "link_flap_policy": "",
                                "link_level_flow_control_policy": "",
                                "link_level_policy": "",
                                "lldp_interface_policy": "",
                                "macsec_policy": "",
                                "mcp_interface_policy": "",
                                "monitoring_policy": "",
                                "netflow_monitor_policies": "",
                                "poe_interface_policy": "",
                                "port_security_policy": "",
                                "priority_flow_control_policy": "",
                                "slow_drain_policy": "",
                                "spanning_tree_interface_policy": "",
                                "storm_control_policy": "",
                                "synce_interface_policy": ""
                            },
                            "poe_interface_policy": {
                                "description": "Name of the PoE Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "port_security_policy": {
                                "description": "Name of the Port Security Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "priority_flow_control_policy": {
                                "description": "Name of the Priority Flow Control Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "attachable_entity_profile": "",
                                "name": "",
                                "site_group": ""
                            },
                            "slow_drain_policy": {
                                "description": "Name of the Slow Drain Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "spanning_tree_interface_policy": {
                                "description": "Name of the Spanning Tree Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "storm_control_policy": {
                                "description": "Name of the Storm Control Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "synce_interface_policy": {
                                "description": "Name of the Synce Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.policyGroups.leafBreakOut": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "breakout_map": {
                                "description": "Enable the port as a breakout port.",
                                "type": "list_of_values",
                                "enum": [
                                    "100g-2x",
                                    "100g-4x",
                                    "10g-4x",
                                    "25g-4x",
                                    "50g-8x"
                                ],
                                "default": "25g-4x",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "description": ""
                            },
                            "required_args": {
                                "breakout_map": "",
                                "name": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "access.policyGroups.leafBundles": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "names": {
                                "description": "Name of the Attachable Access Entity Profile.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                            },
                            "required_args": {
                                "names": "",
                                "site_group": "",
                                "template_name": ""
                            },
                            "template_name": {
                                "description": "Name of the Storm Control Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.policyGroups.leafBundleTemplate": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "attachable_entity_profile": {
                                "description": "Name of the Attachable Access Entity Profile.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "copp_interface_policy": {
                                "description": "Name of the Control Plane Policing Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "data_plane_policing_egress": {
                                "description": "Name of the egress Data Plane Policing Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "data_plane_policing_ingress": {
                                "description": "Name of the ingress Data Plane Policing Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "fibre_channel_interface_policy": {
                                "description": "Name of the Fibre Channel Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "l2_interface_policy": {
                                "description": "Name of the L2 Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "link_aggregation_type": {
                                "description": "Defines if the Port-Channel is local to a switch (pc) or redundant accross a pair (vpc)",
                                "type": "list_of_values",
                                "enum": [
                                    "pc",
                                    "vpc"
                                ],
                                "default": "link",
                                "x-omitempty": true
                            },
                            "link_flap_policy": {
                                "description": "Name of the Link Flap Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "link_level_flow_control_policy": {
                                "description": "Name of the Link Level Flow Control Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "link_level_policy": {
                                "description": "Name of the Link Level Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "macsec_policy": {
                                "description": "Name of the MacSec Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "mcp_interface_policy": {
                                "description": "Name of the Mis-Cabling Protocol Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "monitoring_policy": {
                                "description": "Name of the Monitoring Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "netflow_monitor_policies": {
                                "description": "A NetFlow Monitor Policies identifies packet flows for ingress IP packets and provides statistics based on these packet flows.  This should be configured as a list of strings with each string having a colon to seperate the policy name and the filter type.  There are three IP Filter types: * ce * ipv4 * ipv6. So to do a list of these you would do: 'default:ce,default:ipv4,my_policy:ipv6'",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^(ce|ipv(4|6)):[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "cdp_interface_policy": "",
                                "copp_interface_policy": "",
                                "data_plane_policing_egress": "",
                                "data_plane_policing_ingress": "",
                                "description": "",
                                "fibre_channel_interface_policy": "",
                                "l2_interface_policy": "",
                                "link_flap_policy": "",
                                "link_level_flow_control_policy": "",
                                "link_level_policy": "",
                                "lldp_interface_policy": "",
                                "macsec_policy": "",
                                "mcp_interface_policy": "",
                                "monitoring_policy": "",
                                "netflow_monitor_policies": "",
                                "port_security_policy": "",
                                "priority_flow_control_policy": "",
                                "slow_drain_policy": "",
                                "spanning_tree_interface_policy": "",
                                "storm_control_policy": ""
                            },
                            "port_channel_policy": {
                                "description": "Name of the Port-Channel Interface Policy (LACP).",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "port_security_policy": {
                                "description": "Name of the Port Security Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "priority_flow_control_policy": {
                                "description": "Name of the Priority Flow Control Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "attachable_entity_profile": "",
                                "link_aggregation_type": "",
                                "port_channel_policy": "",
                                "site_group": "",
                                "template_name": ""
                            },
                            "slow_drain_policy": {
                                "description": "Name of the Slow Drain Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "spanning_tree_interface_policy": {
                                "description": "Name of the Spanning Tree Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "storm_control_policy": {
                                "description": "Name of the Storm Control Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "template_name": {
                                "description": "Name of the Storm Control Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.policyGroups.spineAccessPort": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "attachable_entity_profile": {
                                "description": "Name of the Attachable Access Entity Profile.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "link_level_policy": {
                                "description": "Name of the Link Level Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "link_flap_policy": {
                                "description": "Name of the Link Flap Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "macsec_policy": {
                                "description": "Name of the MacSec Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "cdp_interface_policy": "",
                                "description": "",
                                "link_level_policy": "",
                                "link_flap_policy": "",
                                "macsec_policy": ""
                            },
                            "required_args": {
                                "attachable_entity_profile": "",
                                "name": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "access.pools.Vlan": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "allocation_mode": {
                                "description": "VLAN Allocation Mode.",
                                "type": "list_of_values",
                                "enum": [
                                    "dynamic",
                                    "static"
                                ],
                                "default": "static",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "description": "",
                                "global_alias": "",
                                "vlan_group1_allocation": "",
                                "vlan_group2": "",
                                "vlan_group2_allocation": ""
                            },
                            "required_args": {
                                "name": "",
                                "allocation_mode": "",
                                "site_group": "",
                                "vlan_group1": ""
                            },
                            "vlan_group1": {
                                "description": "1st List of VLANs to Add to the VLAN Pool.",
                                "type": "list_of_vlans",
                                "x-omitempty": true
                            },
                            "vlan_group1_allocation": {
                                "description": "VLAN Allocation Mode.",
                                "type": "list_of_values",
                                "enum": [
                                    "dynamic",
                                    "inherit",
                                    "static"
                                ],
                                "default": "inherit",
                                "x-omitempty": true
                            },
                            "vlan_group2": {
                                "description": "2nd List of VLANs to Add to the VLAN Pool.",
                                "type": "list_of_vlans",
                                "x-omitempty": true
                            },
                            "vlan_group2_allocation": {
                                "description": "VLAN Allocation Mode.",
                                "type": "list_of_values",
                                "enum": [
                                    "dynamic",
                                    "inherit",
                                    "static"
                                ],
                                "default": "inherit",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.profiles.interfaceSelectors": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "access_or_native_vlan": {
                                "description": "Access or Native VLAN Identifier.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 4095,
                                "default": null,
                                "x-omitempty": true
                            },
                            "interface": {
                                "description": "Switchport Identifier.",
                                "type": "string",
                                "minimum": 3,
                                "maximum": 5,
                                "pattern": "^[\\d]/[\\d]+(/[\\d]+)?$",
                                "x-omitempty": true
                            },
                            "interface_profile": {
                                "description": "Name of the Interface Profile.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "interface_selector": {
                                "description": "Name of the Interface Selector.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "access_or_native_vlan": "",
                                "description": "",
                                "policy_group": "",
                                "policy_group_type": "",
                                "switchport_mode": "",
                                "trunk_port_allowed_vlans": ""
                            },
                            "policy_group": {
                                "description": "Name of the Policy Group.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "policy_group_type": {
                                "description": "The type of Policy Group.",
                                "type": "list_of_values",
                                "enum": [
                                    "access",
                                    "breakout",
                                    "bundle",
                                    "spine_pg"
                                ],
                                "default": "bundle",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "interface": "",
                                "interface_profile": "",
                                "interface_selector": "",
                                "node_id": "",
                                "pod_id": "",
                                "site_group": ""
                            },
                            "switchport_mode": {
                                "description": "Switchport Trunk Modes.",
                                "type": "list_of_values",
                                "enum": [
                                    "aaep_encap",
                                    "access",
                                    "trunk"
                                ],
                                "default": "trunk",
                                "x-omitempty": true
                            },
                            "trunk_port_allowed_vlans": {
                                "description": "List of allowed VLANs.",
                                "type": "list_of_vlans",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.profiles.switchModules": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "modules": {
                                "description": "Types of Modules.",
                                "type": "list_of_values",
                                "enum": [
                                    "EMPTY",
                                    "X9716D-GX",
                                    "X9732C-EX",
                                    "X9736C-FX",
                                    "X9736PQ"
                                ],
                                "default": "EMPTY",
                                "x-omitempty": true
                            },
                            "node_list": {
                                "description": "List of Switches and modules.",
                                "type": "list_of_integer",
                                "format": "int64",
                                "minimum": 101,
                                "maximum": 4000,
                                "default": 101,
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "module_1": "",
                                "module_2": "",
                                "module_3": "",
                                "module_4": "",
                                "module_5": "",
                                "module_6": "",
                                "module_7": "",
                                "module_8": "",
                                "module_9": "",
                                "module_10": "",
                                "module_11": "",
                                "module_12": "",
                                "module_13": "",
                                "module_14": "",
                                "module_15": "",
                                "module_16": ""
                            },
                            "required_args": {
                                "node_list": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "access.profiles.switchProfiles": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "external_pool_id": {
                                "description": "The Remote Leaf pool ID.",
                                "type": "list_of_integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 255,
                                "default": 0,
                                "x-omitempty": true
                            },
                            "inband_ipv4": {
                                "description": "IPv4 Address of the Inband Management Interface.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "inband_ipv4_gateway": {
                                "description": "IPv4 Gateway of the Inband Management Interface.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "inband_ipv6": {
                                "description": "IPv6 Address of the Inband Management Interface.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "inband_ipv6_gateway": {
                                "description": "IPv6 Gateway of the Inband Management Interface.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "inband_mgmt_epg": {
                                "description": "Name of the Inband Management EPG.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "node_type": {
                                "description": "What is the Node-Type of the Switch in the Fabric.",
                                "type": "list_of_values",
                                "enum": [
                                    "leaf",
                                    "remote-leaf",
                                    "spine",
                                    "tier-2-leaf"
                                ],
                                "default": "leaf",
                                "x-omitempty": true
                            },
                            "ooband_ipv4": {
                                "description": "IPv4 Address of the Out-of-Band Management Interface.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "ooband_ipv4_gateway": {
                                "description": "IPv4 Gateway of the Out-of-Band Management Interface.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "ooband_ipv6": {
                                "description": "IPv6 Address of the Out-of-Band Management Interface.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "ooband_ipv6_gateway": {
                                "description": "IPv6 Gateway of the Out-of-Band Management Interface.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "external_pool_id": "",
                                "inband_ipv4": "",
                                "inband_ipv4_gateway": "",
                                "inband_ipv6": "",
                                "inband_ipv6_gateway": "",
                                "inband_mgmt_epg": "",
                                "ooband_ipv4": "",
                                "ooband_ipv4_gateway": "",
                                "ooband_ipv6": "",
                                "ooband_ipv6_gateway": "",
                                "ooband_mgmt_epg": "",
                                "vpc_domain_id": "",
                                "vpc_name": ""
                            },
                            "ooband_mgmt_epg": {
                                "description": "Name of the Out-of-Band Management EPG.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "node_id": "",
                                "node_type": "",
                                "pod_id": "",
                                "role": "",
                                "serial_number": "",
                                "site_group": "",
                                "switch_model": "",
                                "switch_name": ""
                            },
                            "role": {
                                "description": "What is the Role of the Switch in the Fabric.",
                                "type": "list_of_values",
                                "enum": [
                                    "leaf",
                                    "spine",
                                    "unspecified"
                                ],
                                "default": "leaf",
                                "x-omitempty": true
                            },
                            "serial_number": {
                                "description": "Serial Number of the Switch.",
                                "type": "string",
                                "minimum": 9,
                                "maximum": 11,
                                "pattern": "^([A-Z]{3}[2-3][\\d]([0][1-9]|[1-4][0-9]|[5][1-3])[\\dA-Z]{4}|TEP-1-[\\d]{3})$",
                                "x-omitempty": true
                            },
                            "switch_model": {
                                "description": "Switch Models.",
                                "type": "list_of_values",
                                "enum": [
                                    "9504",
                                    "9508",
                                    "9516",
                                    "93108TC-EX",
                                    "93108TC-FX",
                                    "93120TX",
                                    "9316D-GX",
                                    "93180YC-EX",
                                    "93180YC-FX",
                                    "93180YC-FX3",
                                    "93216TC-FX2",
                                    "93240YC-FX2",
                                    "9332C",
                                    "9332D-GX2B",
                                    "93360YC-FX2",
                                    "9336C-FX2",
                                    "9336PQ",
                                    "9348GC-FXP",
                                    "93600CD-GX",
                                    "9364C",
                                    "9364C-GX",
                                    "9364D-GX2A",
                                    "9396PX"
                                ],
                                "default": "93180YC-FX",
                                "x-omitempty": true
                            },
                            "switch_name": {
                                "description": "Hostname of the Switch.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "vpc_domain_id": {
                                "description": "An ID Number between 1 and 1001 to Identify the VPC pair.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 1001,
                                "default": 201,
                                "x-omitempty": true
                            },
                            "vpc_name": {
                                "description": "Name of the VPC Domain.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.preBuiltPolicies": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "cdp_interface": {
                                "description": "Boolean to configure or not configure CDP Interface Pre-Built Policies.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "fibre_channel_interface": {
                                "description": "Boolean to configure or not configure Fibre-Channel Interface Pre-Built Policies.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "l2_interface": {
                                "description": "Boolean to configure or not configure L2 Interface Pre-Built Policies.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "link_level": {
                                "description": "Boolean to configure or not configure Link Level Pre-Built Policies.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "lldp_interface": {
                                "description": "Boolean to configure or not configure LLDP Interface Pre-Built Policies.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "mcp_interface": {
                                "description": "Boolean to configure or not configure Mis-Cabling Protocol Interface Pre-Built Policies.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "optional_args": {
                            },
                            "port_channel": {
                                "description": "Boolean to configure or not configure Port Channel Interface Pre-Built Policies.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "port_security": {
                                "description": "Boolean to configure or not configure Port Security Interface Pre-Built Policies.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "required_args": {
                                "cdp_interface": "",
                                "fibre_channel_interface": "",
                                "l2_interface": "",
                                "link_level": "",
                                "lldp_interface": "",
                                "mcp_interface": "",
                                "port_channel": "",
                                "port_security": "",
                                "spanning_tree_interface": "",
                                "site_group": ""
                            },
                            "spanning_tree_interface": {
                                "description": "Boolean to configure or not configure Spanning Tree Interface Pre-Built Policies.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.switches.leafPolicyGroup": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "bfd_ipv4_policy": {
                                "description": "Name of the BFD IPv4 Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "bfd_ipv6_policy": {
                                "description": "Name of the BFD IPv6 Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "bfd_multihop_ipv4_policy": {
                                "description": "Name of the BFD MultiHop IPv4 Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "bfd_multihop_ipv6_policy": {
                                "description": "Name of the BFD MultiHop IPv6 Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "copp_leaf_policy": {
                                "description": "Name of the Control Plane Policing Leaf Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "copp_pre-filter": {
                                "description": "Name of the Control Plane Policing Pre-Filter Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "dot1x_node_authentication_policy": {
                                "description": "Name of the 802.1x Node Authentication Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "equipment_flash_config": {
                                "description": "Name of the Equipment Flash Config Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "fast_link_failover_policy": {
                                "description": "Name of the Fast Link Failover Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "fibre_channel_node_policy": {
                                "description": "Name of the Fibre Channel Node Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "fibre_channel_san_policy": {
                                "description": "Name of the Fibre Channel SAN Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "forward_scale_profile_policy": {
                                "description": "Name of the Forward Scale Profile Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "monitoring_policy": {
                                "description": "Name of the Monitoring Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "netflow_node_policy": {
                                "description": "Name of the Netflow Node Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "bfd_ipv4_policy": "",
                                "bfd_ipv6_policy": "",
                                "bfd_multihop_ipv4_policy": "",
                                "bfd_multihop_ipv6_policy": "",
                                "cdp_interface_policy": "",
                                "copp_leaf_policy": "",
                                "copp_pre-filter": "",
                                "description": "",
                                "dot1x_node_authentication_policy": "",
                                "fast_link_failover_policy": "",
                                "fibre_channel_node_policy": "",
                                "fibre_channel_san_policy": "",
                                "forward_scale_profile_policy": "",
                                "lldp_interface_policy": "",
                                "netflow_node_policy": "",
                                "poe_node_policy": "",
                                "ptp_node_policy": "",
                                "spanning_tree_interface_policy": "",
                                "synce_node_policy": "",
                                "usb_configuration_policy": ""
                            },
                            "poe_node_policy": {
                                "description": "Name of the PoE Node Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "ptp_node_policy": {
                                "description": "Name of the Precision Time Protocol Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "name": "",
                                "site_group": ""
                            },
                            "spanning_tree_interface_policy": {
                                "description": "Name of the Spanning Tree Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "synce_node_policy": {
                                "description": "Name of the Synce Node Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "usb_configuration_policy": {
                                "description": "Name of the USB Configuration Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.switches.portConvert": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "convert_to": {
                                "description": "Port Conversion To Type.",
                                "type": "list_of_values",
                                "enum": [
                                    "downlink",
                                    "uplink"
                                ],
                                "default": "downlink",
                                "x-omitempty": true
                            },
                            "node_list": {
                                "description": "List of Switches to perform the conversion on.",
                                "type": "list_of_integer",
                                "format": "int64",
                                "minimum": 101,
                                "maximum": 4000,
                                "default": 101,
                                "x-omitempty": true
                            },
                            "port_list": {
                                "description": "List of Ports to perform the conversion on.",
                                "type": "list_of_integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 108,
                                "default": 53,
                                "x-omitempty": true
                            },
                            "optional_args": {
                            },
                            "required_args": {
                                "convert_to": "",
                                "node_list": "",
                                "port_list": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "access.switches.spinePolicyGroup": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "bfd_ipv4_policy": {
                                "description": "Name of the BFD IPv4 Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "bfd_ipv6_policy": {
                                "description": "Name of the BFD IPv6 Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "copp_pre-filter": {
                                "description": "Name of the Control Plane Policing Pre-Filter Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "copp_spine_policy": {
                                "description": "Name of the Control Plane Policing Spine Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "bfd_ipv4_policy": "",
                                "bfd_ipv6_policy": "",
                                "cdp_interface_policy": "",
                                "copp_pre-filter": "",
                                "copp_spine_policy": "",
                                "description": "",
                                "lldp_interface_policy": "",
                                "usb_configuration_policy": ""
                            },
                            "required_args": {
                                "name": "",
                                "site_group": ""
                            },
                            "usb_configuration_policy": {
                                "description": "Name of the USB Configuration Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.vmm.Controllers": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "datacenter": {
                                "description": "Name of the Data Center.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 255,
                                "pattern": "^.+$",
                                "x-omitempty": true
                            },
                            "domain_name": {
                                "description": "Name of the VMM Domain.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "dvs_version": {
                                "description": "Version fo the DVS Switch for a VMware DVS.",
                                "type": "list_of_values",
                                "enum": [
                                    "6.5",
                                    "6.6",
                                    "7.0",
                                    "unmanaged"
                                ],
                                "default": "unmanaged",
                                "x-omitempty": true
                            },
                            "hostname": {
                                "description": "Hostname.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "monitoring_policy": ""
                            },
                            "required_args": {
                                "datacenter": "",
                                "domain_name": "",
                                "dvs_version": "",
                                "hostname": "",
                                "management_epg": "",
                                "site_group": "",
                                "stats_collection": "",
                                "switch_scope": "",
                                "trigger_inventory_sync": ""
                            },
                            "stats_collection": {
                                "description": "Flag to Enable Stats Collection from the Virtual Networking Switch.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "disabled",
                                "x-omitempty": true
                            },
                            "switch_scope": {
                                "description": "The scope of Virtual Switch.",
                                "type": "list_of_values",
                                "enum": [
                                    "MicrosoftSCVMM",
                                    "cloudfoundry",
                                    "iaas",
                                    "kubernetes",
                                    "network",
                                    "nsx",
                                    "openshift",
                                    "openstack",
                                    "rhev",
                                    "unmanaged",
                                    "vm"
                                ],
                                "default": "read-write",
                                "x-omitempty": true
                            },
                            "trigger_inventory_sync": {
                                "description": "Trigger Inventory Sync with the Controller.",
                                "type": "list_of_values",
                                "enum": [
                                    "triggered",
                                    "untriggered"
                                ],
                                "default": "untriggered",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.vmm.Credentials": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "domain_name": {
                                "description": "Name of the VMM Domain.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "description": ""
                            },
                            "required_args": {
                                "domain_name": "",
                                "site_group": "",
                                "username": ""
                            },
                            "vmm_password": {
                                "description": "Controller Login Password.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 255,
                                "pattern": "^.*$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.vmm.Domains": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "access_mode": {
                                "description": "Virtual Networking Read or Write Mode.",
                                "type": "list_of_values",
                                "enum": [
                                    "read-only",
                                    "read-write"
                                ],
                                "default": "read-write",
                                "x-omitempty": true
                            },
                            "delimiter": {
                                "description": "The delimiter symbol to use with the VMware portgroup name.  The acceptable symbols are |, ~, !, @, ^, +, =, and _..",
                                "type": "list_of_values",
                                "enum": [
                                    "|",
                                    "~",
                                    "!",
                                    "@",
                                    "^",
                                    "+",
                                    "=",
                                    "_"
                                ],
                                "default": "|",
                                "x-omitempty": true
                            },
                            "enable_tag_collection": {
                                "description": "vCenter Tag collection for micro-Segmentation.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "enable_vm_folder_data_retrieval": {
                                "description": "vCenter VM Folder collection for micro-Segmentation.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "endpoint_retention_time": {
                                "description": "The number of seconds an endpoint is retained after it has been marked for deletion.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 600,
                                "default": 0,
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "uplink_names": ""
                            },
                            "required_args": {
                                "access_mode": "",
                                "delimiter": "",
                                "enable_tag_collection": "",
                                "endpoint_retention_time": "",
                                "enable_vm_folder_data_retrieval": "",
                                "name": "",
                                "site_group": "",
                                "switch_mode": "",
                                "switch_provider": "",
                                "vlan_pool": ""
                            },
                            "switch_mode": {
                                "description": "The mode of Virtual Switch.",
                                "type": "list_of_values",
                                "enum": [
                                    "cf",
                                    "default",
                                    "k8s",
                                    "nsx",
                                    "ovs",
                                    "rancher",
                                    "rhev",
                                    "openshift",
                                    "unknown"
                                ],
                                "default": "default",
                                "x-omitempty": true
                            },
                            "switch_provider": {
                                "description": "The Switch Vendor.",
                                "type": "list_of_values",
                                "enum": [
                                    "CloudFoundry",
                                    "Kubernetes",
                                    "Microsoft",
                                    "OpenShift",
                                    "OpenStack",
                                    "Redhat",
                                    "VMware"
                                ],
                                "default": "VMware",
                                "x-omitempty": true
                            },
                            "uplink_names": {
                                "description": "Names for the Virtual Networking Uplinks.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "vlan_pool": {
                                "description": "Name of the VLAN Pool to Assign.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "access.vmm.enhancedLag": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "domain_name": {
                                "description": "Name of the VMM Domain.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "mode": {
                                "description": "LACP Mode.",
                                "type": "list_of_values",
                                "enum": [
                                    "active",
                                    "passive"
                                ],
                                "default": "active",
                                "x-omitempty": true
                            },
                            "load_balancing_mode": {
                                "description": "Load balancing algorithm.",
                                "type": "list_of_values",
                                "enum": [
                                    "dst-ip",
                                    "dst-ip-l4port",
                                    "dst-ip-l4port-vlan",
                                    "dst-ip-vlan",
                                    "dst-l4port",
                                    "dst-mac",
                                    "src-dst-ip",
                                    "src-dst-ip-l4port",
                                    "src-dst-ip-l4port-vlan",
                                    "src-dst-ip-vlan",
                                    "src-dst-l4port",
                                    "src-dst-mac",
                                    "src-ip",
                                    "src-ip-l4port",
                                    "src-ip-l4port-vlan",
                                    "src-ip-vlan",
                                    "src-l4port",
                                    "src-mac",
                                    "src-port-id",
                                    "vlan"
                                ],
                                "default": "src-dst-ip",
                                "x-omitempty": true
                            },
                            "number_of_links": {
                                "description": "The number of links to add to the enhanced LAG Policy.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 2,
                                "maximum": 8,
                                "default": 2,
                                "x-omitempty": true
                            },
                            "optional_args": {
                            },
                            "required_args": {
                                "domain_name": "",
                                "mode": "",
                                "load_balancing_mode": "",
                                "number_of_links": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "access.vmm.vswitchPolicy": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "domain_name": {
                                "description": "Name of the VMM Domain.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "mtu_policy": {
                                "description": "Name of the L2 Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "vmm_netflow_exporter_policy": ""
                            },
                            "required_args": {
                                "cdp_interface_policy": "",
                                "domain_name": "",
                                "lldp_interface_policy": "",
                                "mtu_policy": "",
                                "port_channel_policy": "",
                                "site_group": ""
                            },
                            "vmm_netflow_exporter_policy": {
                                "description": "Name of the Netlfow Exporters for VM Networking Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "admin.exportPolicy": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "days": {
                                "description": "Scheduled Days.",
                                "type": "list_of_values",
                                "enum": [
                                    "every-day",
                                    "even-day",
                                    "odd-day",
                                    "Sunday",
                                    "Monday",
                                    "Tuesday",
                                    "Wednesday",
                                    "Thursday",
                                    "Friday",
                                    "Saturday",
                                    "Sunday"
                                ],
                                "default": "json",
                                "x-omitempty": true
                            },
                            "format": {
                                "description": "Format of the Backup File.",
                                "type": "list_of_values",
                                "enum": [
                                    "json",
                                    "xml"
                                ],
                                "default": "json",
                                "x-omitempty": true
                            },
                            "hour": {
                                "description": "Hour of the day to perform the backup.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 23,
                                "default": 0,
                                "x-omitempty": true
                            },
                            "include_secure_fields": {
                                "description": "Flag to include secure fields.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "max_snapshot_count": {
                                "description": "Maximum Number of Snapshots to allow.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 10,
                                "default": 0,
                                "x-omitempty": true
                            },
                            "minute": {
                                "description": "Minute of the day to perform the backup.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 59,
                                "default": 0,
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "description": ""
                            },
                            "required_args": {
                                "days": "",
                                "format": "",
                                "hour": "",
                                "include_secure_fields": "",
                                "max_snapshot_count": "",
                                "minute": "",
                                "name": "",
                                "site_group": "",
                                "snapshot": "",
                                "start_now": ""
                            },
                            "snapshot": {
                                "description": "Flag to define if the backup is a snapshot.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "start_now": {
                                "description": "Flag to Start the Backup now.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "admin.firmware.Policy": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "compatibility_check": {
                                "description": "A property for specifying whether compatibility checks should be ignored when applying the firmware policy.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "graceful_upgrade": {
                                "description": "This option will enable Graceful Insertion and Removal mode.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "notify_conditions": {
                                "description": "Maintenance Policy Admin Notification.",
                                "type": "list_of_values",
                                "enum": [
                                    "notifyAlwaysBetweenSets",
                                    "notifyNever",
                                    "notifyOnlyOnFailures"
                                ],
                                "default": "notifyOnlyOnFailures",
                                "x-omitempty": true
                            },
                            "optional_args": {
                            },
                            "policy_type": {
                                "description": "The Firmware Type for the Maintenance Group.",
                                "type": "list_of_values",
                                "enum": [
                                    "controller",
                                    "switch"
                                ],
                                "default": "switch",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "compatibility_check": "",
                                "graceful_upgrade": "",
                                "name": "",
                                "notify_conditions": "",
                                "policy_type": "",
                                "run_mode": "",
                                "simulator": "",
                                "site_group": "",
                                "version_check_override": ""
                            },
                            "run_mode": {
                                "description": "Maintenance Policy Admin Notification.",
                                "type": "list_of_values",
                                "enum": [
                                    "pauseAlwaysBetweenSets",
                                    "pauseNever",
                                    "pauseOnlyOnFailures"
                                ],
                                "default": "pauseOnlyOnFailures",
                                "x-omitempty": true
                            },
                            "simulator": {
                                "description": "Is this an APIC Simulator.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "version_check_override": {
                                "description": "A property for specifying whether the firmware upgrade should be triggered or not. .",
                                "type": "list_of_values",
                                "enum": [
                                    "trigger",
                                    "trigger-immediate",
                                    "triggered",
                                    "untriggered"
                                ],
                                "default": "untriggered",
                                "x-omitempty": true
                            },
                            "scheduled_days": {
                                "description": "Scheduled Days.",
                                "type": "list_of_values",
                                "enum": [
                                    "every-day",
                                    "even-day",
                                    "odd-day",
                                    "Sunday",
                                    "Monday",
                                    "Tuesday",
                                    "Wednesday",
                                    "Thursday",
                                    "Friday",
                                    "Saturday",
                                    "Sunday"
                                ],
                                "default": "json",
                                "x-omitempty": true
                            },
                            "scheduled_hour": {
                                "description": "Hour of the day to perform the backup.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 23,
                                "default": 0,
                                "x-omitempty": true
                            },
                            "scheduled_minute": {
                                "description": "Minute of the day to perform the backup.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 59,
                                "default": 0,
                                "x-omitempty": true
                            },
                            "snapshot": {
                                "description": "Flag to define if the backup is a snapshot.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "start_now": {
                                "description": "Flag to Start the Backup now.",
                                "type": "list_of_values",
                                "enum": [
                                    "triggered",
                                    "untriggered"
                                ],
                                "default": "untriggered",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "admin.firmware.MaintenanceGroups": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "maintenance_group_policy": {
                                "description": "Name of the Firmware Maintenance Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "node_list": {
                                "description": "List of Switches to add to the Maintenance Group.",
                                "type": "list_of_integer",
                                "format": "int64",
                                "minimum": 101,
                                "maximum": 4000,
                                "default": 101,
                                "x-omitempty": true
                            },
                            "optional_args": {
                            },
                            "required_args": {
                                "maintenance_group_policy": "",
                                "name": "",
                                "node_list": "",
                                "site_group": "",
                                "start_now": ""
                            },
                            "start_now": {
                                "description": "Flag to Start an Upgrade right now.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "admin.globalSecurity": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "enable_lockout": {
                                "description": "Enable User Lockout.",
                                "type": "list_of_values",
                                "enum": [
                                    "disable",
                                    "enable"
                                ],
                                "default": "disable",
                                "x-omitempty": true
                            },
                            "lockout_duration": {
                                "description": "Lockout Duration.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 1440,
                                "default": 60,
                                "x-omitempty": true
                            },
                            "max_failed_attempts": {
                                "description": "Max Failed Attempts.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 15,
                                "default": 5,
                                "x-omitempty": true
                            },
                            "maximum_validity_period": {
                                "description": "Maximum Validity Period.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 24,
                                "default": 24,
                                "x-omitempty": true
                            },
                            "max_failed_attempts_window": {
                                "description": "Max Failed Attempts Window.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 720,
                                "default": 5,
                                "x-omitempty": true
                            },
                            "optional_args": {},
                            "password_change_interval": {
                                "description": "Password Change Interval.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 745,
                                "default": 0,
                                "x-omitempty": true
                            },
                            "password_change_interval_enforce": {
                                "description": "Password Change Interval Enforce.",
                                "type": "list_of_values",
                                "enum": [
                                    "disable",
                                    "enable"
                                ],
                                "default": "disable",
                                "x-omitempty": true
                            },
                            "password_changes_within_interval": {
                                "description": "Password Changes within Interval.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 10,
                                "default": 2,
                                "x-omitempty": true
                            },
                            "password_expiration_warn_time": {
                                "description": "Password Expiration Warn Time.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 30,
                                "default": 15,
                                "x-omitempty": true
                            },
                            "password_strength_check": {
                                "description": "Password Strength Check.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "required_args": {
                                "enable_lockout": "",
                                "lockout_duration": "",
                                "max_failed_attempts": "",
                                "max_failed_attempts_window": "",
                                "maximum_validity_period": "",
                                "password_change_interval": "",
                                "password_change_interval_enforce": "",
                                "password_changes_within_interval": "",
                                "password_expiration_warn_time": "",
                                "password_strength_check": "",
                                "site_group": "",
                                "user_passwords_to_store_count": "",
                                "web_session_idle_timeout": "",
                                "web_token_timeout": ""
                            },
                            "user_passwords_to_store_count": {
                                "description": "User Passwords To Store Count.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 15,
                                "default": 5,
                                "x-omitempty": true
                            },
                            "web_session_idle_timeout": {
                                "description": "Web Session Idle Timeout.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 60,
                                "maximum": 65525,
                                "default": 1200,
                                "x-omitempty": true
                            },
                            "web_token_timeout": {
                                "description": "Web Token Timeout.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 300,
                                "maximum": 9600,
                                "default": 600,
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "admin.Authentication": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "console_login_domain": {
                                "description": "Login Domain Name.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 10,
                                "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_]+$",
                                "x-omitempty": true
                            },
                            "console_realm": {
                                "description": "Available Realms for Console Authentication.",
                                "type": "list_of_values",
                                "enum": [
                                    "duo_proxy_ldap",
                                    "duo_proxy_radius",
                                    "local",
                                    "ldap", 
                                    "radius",
                                    "rsa",
                                    "saml",
                                    "tacacs",
                                    true
                                ],
                                "default": "local",
                                "x-omitempty": true
                            },
                            "default_login_domain": {
                                "description": "Login Domain Name.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 10,
                                "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_]+$",
                                "x-omitempty": true
                            },
                            "default_realm": {
                                "description": "Available Realms for Default Authentication.",
                                "type": "list_of_values",
                                "enum": [
                                    "duo_proxy_ldap",
                                    "duo_proxy_radius",
                                    "local",
                                    "ldap", 
                                    "radius",
                                    "rsa",
                                    "saml",
                                    "tacacs",
                                    true
                                ],
                                "default": "local",
                                "x-omitempty": true
                            },
                            "fallback_domain_avialability": {
                                "description": "Should the local domain be available when the default authentication is not local and the providers are reachable.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "console_login_domain": "",
                                "default_login_domain": ""
                            },
                            "remote_user_login_policy": {
                                "description": "What is the default Policy if user fails login due to invalid credentials.",
                                "type": "list_of_values",
                                "enum": [
                                    "assign-default-role",
                                    "no-login"
                                ],
                                "default": "no-login",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "site_group": "",
                                "console_realm": "",
                                "default_realm": "",
                                "fallback_domain_avialability": "",
                                "remote_user_login_policy": "",
                                "use_icmp_reachable_providers_only": ""
                            },
                            "use_icmp_reachable_providers_only": {
                                "description": "Flag to turn on ICMP check for Providers.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "admin.Radius": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "authorization_protocol": {
                                "description": "Authorization Protocol to Use.",
                                "type": "list_of_values",
                                "enum": [
                                    "chap",
                                    "mschap",
                                    "pap"
                                ],
                                "default": "pap",
                                "x-omitempty": true
                            },
                            "hosts": {
                                "description": "List of RADIUS Servers.",
                                "type": "list_of_hosts",
                                "x-omitempty": true
                            },
                            "login_domain": {
                                "description": "Login Domain.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 10,
                                "pattern": "^([a-zA-Z0-9][a-zA-Z0-9\\_]+)$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "username": ""
                            },
                            "port": {
                                "description": "RADIUS Port.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 65535,
                                "default": 1812,
                                "x-omitempty": true
                            },
                            "radius_key": {
                                "description": "Radius secret key.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 32,
                                "pattern": "[\\\\ #]",
                                "x-omitempty": true
                            },
                            "radius_monitoring_password": {
                                "description": "Radius monitoring password.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 32,
                                "pattern": "^.*$",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "authorization_protocol": "",
                                "hosts": "",
                                "login_domain": "",
                                "management_epg": "",
                                "port": "",
                                "retries": "",
                                "server_monitoring": "",
                                "site_group": "",
                                "timeout": "",
                                "type": ""
                            },
                            "retries": {
                                "description": "Number of Retries to Attempt.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 5,
                                "default": 2,
                                "x-omitempty": true
                            },
                            "server_monitoring": {
                                "description": "Flag to enable or disable RADIUS Server Monitoring.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "disabled",
                                "x-omitempty": true
                            },
                            "timeout": {
                                "description": "Timeout in Seconds.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 5,
                                "maximum": 60,
                                "default": 5,
                                "x-omitempty": true
                            },
                            "type": {
                                "description": "RADIUS Server Type.",
                                "type": "list_of_values",
                                "enum": [
                                    "duo",
                                    "radius",
                                    "rsa"
                                ],
                                "default": "radius",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "admin.remoteHost": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "authentication_type": {
                                "description": "Remote Host authentication type.",
                                "type": "list_of_values",
                                "enum": [
                                    "usePassword",
                                    "useSshKeyContents"
                                ],
                                "default": "usePassword",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "description": "",
                                "username": ""
                            },
                            "protocol": {
                                "description": "Remote Host authentication type.",
                                "type": "list_of_values",
                                "enum": [
                                    "ftp",
                                    "scp",
                                    "sftp"
                                ],
                                "default": "sftp",
                                "x-omitempty": true
                            },
                            "remote_hosts": {
                                "description": "List of Remote Hosts.",
                                "type": "list_of_hosts",
                                "x-omitempty": true
                            },
                            "remote_password": {
                                "description": "Remote Password.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 32,
                                "pattern": "^.*$",
                                "x-omitempty": true
                            },
                            "remote_path": {
                                "description": "Remote Path.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 512,
                                "pattern": "^.*$",
                                "x-omitempty": true
                            },
                            "remote_port": {
                                "description": "Remote Host Port.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 65535,
                                "default": 22,
                                "x-omitempty": true
                            },
                            "required_args": {
                                "authentication_type": "",
                                "management_epg": "",
                                "protocol": "",
                                "remote_hosts": "",
                                "remote_path": "",
                                "remote_port": "",
                                "scheduler_name": "",
                                "site_group": ""
                            },
                            "scheduler_name": {
                                "description": "Scheduler Name.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "ssh_key_contents": {
                                "description": "SSH Key Contents.",
                                "type": "string",
                                "minimum": 512,
                                "maximum": 4096,
                                "pattern": "^.*$",
                                "x-omitempty": true
                            },
                            "ssh_key_passphrase": {
                                "description": "SSH Key Passphrase.",
                                "type": "string",
                                "minimum": 512,
                                "maximum": 512,
                                "pattern": "^.*$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "admin.smartCallHome": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "contact_information": {
                                "description": "Smart Callhome contact information field.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 255,
                                "pattern": "^$|^(?!.{64,})[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+$",
                                "x-omitempty": true
                            },
                            "customer_contact_email": {
                                "description": "Smart Callhome customer contact email field.",
                                "type": "email",
                                "x-omitempty": true
                            },
                            "from_email": {
                                "description": "Smart Callhome from email field.",
                                "type": "email",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "contact_information": "",
                                "contract_id": "",
                                "customer_id": "",
                                "customer_contact_email": "",
                                "from_email": "",
                                "phone_contact": "",
                                "reply_to_email": "",
                                "site_id": "",
                                "street_address": ""
                            },
                            "phone_contact": {
                                "description": "Callhome contact phone number.",
                                "type": "phone_number",
                                "x-omitempty": true
                            },
                            "reply_to_email": {
                                "description": "Smart Callhome reply to email field.",
                                "type": "email",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "admin_state": "",
                                "site_group": ""
                            },
                            "street_address": {
                                "description": "Smart CallHome street address.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 255,
                                "pattern": "^[a-zA-Z0-9\\\\!#$%()*,-./:;@ _{|}~?&+]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "admin.smartDestinations": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "email": {
                                "description": "Smart Callhome destination email.",
                                "type": "email",
                                "x-omitempty": true
                            },
                            "format": {
                                "description": "Format of the Email.",
                                "type": "list_of_values",
                                "enum": [
                                    "aml",
                                    "short-txt",
                                    "xml"
                                ],
                                "default": "short-txt",
                                "x-omitempty": true
                            },
                            "optional_args": {},
                            "required_args": {
                                "admin_state": "",
                                "email": "",
                                "format": "",
                                "rfc_compliant": "",
                                "site_group": ""
                            },
                            "rfc_compliant": {
                                "description": "Should the Message be RFC Compliant.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "admin.smartSmtpServer": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "optional_args": {
                                "username": ""
                            },
                            "port_number": {
                                "description": "Smart SMTP Server",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 65535,
                                "default": 25,
                                "x-omitempty": true
                            },
                            "required_args": {
                                "management_epg": "",
                                "port_number": "",
                                "secure_smtp": "",
                                "smtp_server": "",
                                "site_group": ""
                            },
                            "secure_smtp": {
                                "description": "Does the SMTP Server Require Credentials.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "smtp_password": {
                                "description": "Security SMTP Password.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 128,
                                "pattern": "^[\\S+]{1,128}$",
                                "x-omitempty": true
                            },
                            "smtp_server": {
                                "description": "SMTP Server.",
                                "type": "hostname",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "admin.Syslog": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "audit_logs": {
                                "description": "Audit Log Values.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "console_admin_state": {
                                "description": "Console Syslog Admin State.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "enabled",
                                "x-omitempty": true
                            },
                            "console_severity": {
                                "description": "Console Severity.",
                                "type": "list_of_values",
                                "enum": [
                                    "alerts",
                                    "critical",
                                    "emergencies"
                                ],
                                "default": "critical",
                                "x-omitempty": true
                            },
                            "events": {
                                "description": "Audit Log Values.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "faults": {
                                "description": "Faults Values.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "format": {
                                "description": "Syslog Format.",
                                "type": "list_of_values",
                                "enum": [
                                    "aci",
                                    "nxos"
                                ],
                                "default": "aci",
                                "x-omitempty": true
                            },
                            "local_admin_state": {
                                "description": "Local Syslog Admin State.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "enabled",
                                "x-omitempty": true
                            },
                            "local_severity": {
                                "description": "Local Severity.",
                                "type": "list_of_values",
                                "enum": [
                                    "alerts",
                                    "critical",
                                    "debugging",
                                    "emergencies",
                                    "errors",
                                    "information",
                                    "notifications",
                                    "warnings"
                                ],
                                "default": "information",
                                "x-omitempty": true
                            },
                            "optional_args": {},
                            "required_args": {
                                "admin_state": "",
                                "audit_logs": "",
                                "console_admin_state": "",
                                "console_severity": "",
                                "events": "",
                                "faults": "",
                                "format": "",
                                "local_admin_state": "",
                                "local_severity": "",
                                "session_logs": "",
                                "show_milliseconds_in_timestamp": "",
                                "show_time_zone_in_timestamp": "",
                                "site_group": ""
                            },
                            "session_logs": {
                                "description": "Session Log Values.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "show_milliseconds_in_timestamp": {
                                "description": "Flag to show milliseconds in timestamp.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "show_time_zone_in_timestamp": {
                                "description": "Flag to show timezone in timestamp.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "admin.syslogRemoteDestinations": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "forwarding_facility": {
                                "description": "The Remote Syslog Server Facility.",
                                "type": "list_of_values",
                                "enum": [
                                    "local0",
                                    "local1",
                                    "local2",
                                    "local3",
                                    "local4",
                                    "local5",
                                    "local6",
                                    "local7"
                                ],
                                "default": "local7",
                                "x-omitempty": true
                            },
                            "hosts": {
                                "description": "List of Syslog Remote Destination Servers.",
                                "type": "list_of_hosts",
                                "x-omitempty": true
                            },
                            "optional_args": {},
                            "port": {
                                "description": "Syslog Destination Port.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 65535,
                                "default": 514,
                                "x-omitempty": true
                            },
                            "required_args": {
                                "admin_state": "",
                                "forwarding_facility": "",
                                "hosts": "",
                                "management_epg": "",
                                "port": "",
                                "severity": "",
                                "site_group": "",
                                "transport": ""
                            },
                            "severity": {
                                "description": "The Syslog Severity Level.",
                                "type": "list_of_values",
                                "enum": [
                                    "alerts",
                                    "critical",
                                    "debugging",
                                    "emergencies",
                                    "errors",
                                    "information",
                                    "notifications",
                                    "warnings"
                                ],
                                "default": "information",
                                "x-omitempty": true
                            },
                            "transport": {
                                "description": "Send Syslog using TCP or UDP.",
                                "type": "list_of_values",
                                "enum": [
                                    "tcp",
                                    "udp"
                                ],
                                "default": "udp",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "admin.Tacacs": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "authorization_protocol": {
                                "description": "Authorization Protocol to Use.",
                                "type": "list_of_values",
                                "enum": [
                                    "chap",
                                    "mschap",
                                    "pap"
                                ],
                                "default": "pap",
                                "x-omitempty": true
                            },
                            "hosts": {
                                "description": "List of TACACS+ Servers.",
                                "type": "list_of_hosts",
                                "x-omitempty": true
                            },
                            "login_domain": {
                                "description": "Login Domain.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 10,
                                "pattern": "^([a-zA-Z0-9][a-zA-Z0-9\\_]+)$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "username": ""
                            },
                            "port": {
                                "description": "TACACS+ Port.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 65535,
                                "default": 49,
                                "x-omitempty": true
                            },
                            "required_args": {
                                "audit_logs": "",
                                "authorization_protocol": "",
                                "events": "",
                                "faults": "",
                                "hosts": "",
                                "login_domain": "",
                                "management_epg": "",
                                "port": "",
                                "retries": "",
                                "server_monitoring": "",
                                "session_logs": "",
                                "site_group": "",
                                "timeout": ""
                                },
                            "retries": {
                                "description": "Number of Retries to Attempt.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 5,
                                "default": 2,
                                "x-omitempty": true
                            },
                            "server_monitoring": {
                                "description": "Flag to enable or disable TACACS+ Server Monitoring.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "disabled",
                                "x-omitempty": true
                            },
                            "tacacs_key": {
                                "description": "TACACS+ secret key.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 32,
                                "pattern": "[\\\\ #]",
                                "x-omitempty": true
                            },
                            "tacacs_monitoring_password": {
                                "description": "TACACS+ monitoring password.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 32,
                                "pattern": "^.*$",
                                "x-omitempty": true
                            },
                            "timeout": {
                                "description": "Timeout in Seconds.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 5,
                                "maximum": 60,
                                "default": 5,
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "fabric.DateandTime": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "administrative_state": {
                                "description": "Date and Time Policy Administrative State.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "enabled",
                                "x-omitempty": true
                            },
                            "display_format": {
                                "description": "Date and Time Display Format.",
                                "type": "list_of_values",
                                "enum": [
                                    "local",
                                    "utc"
                                ],
                                "default": "local",
                                "x-omitempty": true
                            },
                            "master_mode": {
                                "description": "Date and Time Display Format.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "enabled",
                                "x-omitempty": true
                            },
                            "offset_state": {
                                "description": "Date and Time Policy Offset State.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "enabled",
                                "x-omitempty": true
                            },
                            "optional_args": {},
                            "required_args": {
                                "administrative_state": "",
                                "display_format": "",
                                "master_mode": "",
                                "offset_state": "",
                                "server_state": "",
                                "site_group": "",
                                "stratum_value": "",
                                "time_zone": ""
                            },
                            "server_state": {
                                "description": "Date and Time Server State.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ]
                            },
                            "stratum_value": {
                                "description": "Date and Time Server Stratum Value.",
                                "type": "list_of_values",
                                "enum": [
                                    1,
                                    2,
                                    3,
                                    4,
                                    5,
                                    6,
                                    7,
                                    8,
                                    9,
                                    10,
                                    11,
                                    12,
                                    13,
                                    14,
                                    15
                                ]
                            },
                            "time_zone": {
                                "description": "List of Time Zones.",
                                "type": "list_of_values",
                                "enum": [
                                    "UTC",
                                    "Africa/Abidjan",
                                    "Africa/Accra",
                                    "Africa/Addis_Ababa",
                                    "Africa/Algiers",
                                    "Africa/Asmara",
                                    "Africa/Bamako",
                                    "Africa/Bangui",
                                    "Africa/Banjul",
                                    "Africa/Bissau",
                                    "Africa/Blantyre",
                                    "Africa/Brazzaville",
                                    "Africa/Bujumbura",
                                    "Africa/Cairo",
                                    "Africa/Casablanca",
                                    "Africa/Ceuta",
                                    "Africa/Conakry",
                                    "Africa/Dakar",
                                    "Africa/Dar_es_Salaam",
                                    "Africa/Djibouti",
                                    "Africa/Douala",
                                    "Africa/El_Aaiun",
                                    "Africa/Freetown",
                                    "Africa/Gaborone",
                                    "Africa/Harare",
                                    "Africa/Johannesburg",
                                    "Africa/Juba",
                                    "Africa/Kampala",
                                    "Africa/Khartoum",
                                    "Africa/Kigali",
                                    "Africa/Kinshasa",
                                    "Africa/Lagos",
                                    "Africa/Libreville",
                                    "Africa/Lome",
                                    "Africa/Luanda",
                                    "Africa/Lubumbashi",
                                    "Africa/Lusaka",
                                    "Africa/Malabo",
                                    "Africa/Maputo",
                                    "Africa/Maseru",
                                    "Africa/Mbabane",
                                    "Africa/Mogadishu",
                                    "Africa/Monrovia",
                                    "Africa/Nairobi",
                                    "Africa/Ndjamena",
                                    "Africa/Niamey",
                                    "Africa/Nouakchott",
                                    "Africa/Ouagadougou",
                                    "Africa/Porto-Novo",
                                    "Africa/Sao_Tome",
                                    "Africa/Tripoli",
                                    "Africa/Tunis",
                                    "Africa/Windhoek",
                                    "America/Adak",
                                    "America/Anchorage",
                                    "America/Anguilla",
                                    "America/Antigua",
                                    "America/Araguaina",
                                    "America/Argentina/Buenos_Aires",
                                    "America/Argentina/Catamarca",
                                    "America/Argentina/Cordoba",
                                    "America/Argentina/Jujuy",
                                    "America/Argentina/La_Rioja",
                                    "America/Argentina/Mendoza",
                                    "America/Argentina/Rio_Gallegos",
                                    "America/Argentina/Salta",
                                    "America/Argentina/San_Juan",
                                    "America/Argentina/San_Luis",
                                    "America/Argentina/Tucuman",
                                    "America/Argentina/Ushuaia",
                                    "America/Aruba",
                                    "America/Asuncion",
                                    "America/Atikokan",
                                    "America/Bahia_Banderas",
                                    "America/Barbados",
                                    "America/Belem",
                                    "America/Belize",
                                    "America/Blanc-Sablon",
                                    "America/Boa_Vista",
                                    "America/Bogota",
                                    "America/Boise",
                                    "America/Cambridge_Bay",
                                    "America/Campo_Grande",
                                    "America/Cancun",
                                    "America/Caracas",
                                    "America/Cayenne",
                                    "America/Cayman",
                                    "America/Chicago",
                                    "America/Chihuahua",
                                    "America/Costa_Rica",
                                    "America/Creston",
                                    "America/Cuiaba",
                                    "America/Curacao",
                                    "America/Danmarkshavn",
                                    "America/Dawson",
                                    "America/Dawson_Creek",
                                    "America/Denver",
                                    "America/Detroit",
                                    "America/Dominica",
                                    "America/Edmonton",
                                    "America/Eirunepe",
                                    "America/El_Salvador",
                                    "America/Fortaleza",
                                    "America/Glace_Bay",
                                    "America/Godthab",
                                    "America/Goose_Bay",
                                    "America/Grand_Turk",
                                    "America/Grenada",
                                    "America/Guadeloupe",
                                    "America/Guatemala",
                                    "America/Guayaquil",
                                    "America/Guyana",
                                    "America/Halifax",
                                    "America/Havana",
                                    "America/Hermosillo",
                                    "America/Indiana/Indianapolis",
                                    "America/Indiana/Knox",
                                    "America/Indiana/Marengo",
                                    "America/Indiana/Petersburg",
                                    "America/Indiana/Tell_City",
                                    "America/Indiana/Vevay",
                                    "America/Indiana/Vincennes",
                                    "America/Indiana/Winamac",
                                    "America/Inuvik",
                                    "America/Iqaluit",
                                    "America/Jamaica",
                                    "America/Juneau",
                                    "America/Kentucky/Louisville",
                                    "America/Kentucky/Monticello",
                                    "America/Kralendijk",
                                    "America/La_Paz",
                                    "America/Lima",
                                    "America/Los_Angeles",
                                    "America/Lower_Princes",
                                    "America/Maceio",
                                    "America/Managua",
                                    "America/Manaus",
                                    "America/Marigot",
                                    "America/Martinique",
                                    "America/Matamoros",
                                    "America/Mazatlan",
                                    "America/Menominee",
                                    "America/Merida",
                                    "America/Metlakatla",
                                    "America/Mexico_City",
                                    "America/Miquelon",
                                    "America/Moncton",
                                    "America/Monterrey",
                                    "America/Montevideo",
                                    "America/Montreal",
                                    "America/Montserrat",
                                    "America/Nassau",
                                    "America/New_York",
                                    "America/Nipigon",
                                    "America/Nome",
                                    "America/Noronha",
                                    "America/North_Dakota/Beulah",
                                    "America/North_Dakota/Center",
                                    "America/North_Dakota/New_Salem",
                                    "America/Ojinaga",
                                    "America/Panama",
                                    "America/Pangnirtung",
                                    "America/Paramaribo",
                                    "America/Phoenix",
                                    "America/Port-au-Prince",
                                    "America/Port_of_Spain",
                                    "America/Porto_Velho",
                                    "America/Puerto_Rico",
                                    "America/Rainy_River",
                                    "America/Rankin_Inlet",
                                    "America/Recife",
                                    "America/Regina",
                                    "America/Resolute",
                                    "America/Rio_Branco",
                                    "America/Santa_Isabel",
                                    "America/Santarem",
                                    "America/Santiago",
                                    "America/Santo_Domingo",
                                    "America/Sao_Paulo",
                                    "America/Scoresbysund",
                                    "America/Shiprock",
                                    "America/Sitka",
                                    "America/St_Barthelemy",
                                    "America/St_Johns",
                                    "America/St_Kitts",
                                    "America/St_Lucia",
                                    "America/St_Thomas",
                                    "America/St_Vincent",
                                    "America/Swift_Current",
                                    "America/Tegucigalpa",
                                    "America/Thule",
                                    "America/Thunder_Bay",
                                    "America/Tijuana",
                                    "America/Toronto",
                                    "America/Tortola",
                                    "America/Vancouver",
                                    "America/Whitehorse",
                                    "America/Winnipeg",
                                    "America/Yakutat",
                                    "America/Yellowknife",
                                    "Antarctica/Casey",
                                    "Antarctica/Davis",
                                    "Antarctica/DumontDUrville",
                                    "Antarctica/Macquarie",
                                    "Antarctica/Mawson",
                                    "Antarctica/McMurdo",
                                    "Antarctica/Palmer",
                                    "Antarctica/Rothera",
                                    "Antarctica/South_Pole",
                                    "Antarctica/Syowa",
                                    "Antarctica/Vostok",
                                    "Arctic/Longyearbyen",
                                    "Asia/Aden",
                                    "Asia/Almaty",
                                    "Asia/Amman",
                                    "Asia/Anadyr",
                                    "Asia/Aqtau",
                                    "Asia/Aqtobe",
                                    "Asia/Ashgabat",
                                    "Asia/Baghdad",
                                    "Asia/Bahrain",
                                    "Asia/Baku",
                                    "Asia/Bangkok",
                                    "Asia/Beirut",
                                    "Asia/Bishkek",
                                    "Asia/Brunei",
                                    "Asia/Choibalsan",
                                    "Asia/Chongqing",
                                    "Asia/Colombo",
                                    "Asia/Damascus",
                                    "Asia/Dhaka",
                                    "Asia/Dili",
                                    "Asia/Dubai",
                                    "Asia/Dushanbe",
                                    "Asia/Gaza",
                                    "Asia/Harbin",
                                    "Asia/Hebron",
                                    "Asia/Ho_Chi_Minh",
                                    "Asia/Hong_Kong",
                                    "Asia/Hovd",
                                    "Asia/Irkutsk",
                                    "Asia/Jakarta",
                                    "Asia/Jayapura",
                                    "Asia/Jerusalem",
                                    "Asia/Kabul",
                                    "Asia/Kamchatka",
                                    "Asia/Karachi",
                                    "Asia/Kashgar",
                                    "Asia/Kathmandu",
                                    "Asia/Kolkata",
                                    "Asia/Krasnoyarsk",
                                    "Asia/Kuala_Lumpur",
                                    "Asia/Kuching",
                                    "Asia/Kuwait",
                                    "Asia/Macau",
                                    "Asia/Magadan",
                                    "Asia/Makassar",
                                    "Asia/Manila",
                                    "Asia/Muscat",
                                    "Asia/Nicosia",
                                    "Asia/Novokuznetsk",
                                    "Asia/Novosibirsk",
                                    "Asia/Omsk",
                                    "Asia/Oral",
                                    "Asia/Phnom_Penh",
                                    "Asia/Pontianak",
                                    "Asia/Pyongyang",
                                    "Asia/Qatar",
                                    "Asia/Qyzylorda",
                                    "Asia/Rangoon",
                                    "Asia/Riyadh",
                                    "Asia/Sakhalin",
                                    "Asia/Samarkand",
                                    "Asia/Seoul",
                                    "Asia/Shanghai",
                                    "Asia/Singapore",
                                    "Asia/Taipei",
                                    "Asia/Tashkent",
                                    "Asia/Tbilisi",
                                    "Asia/Tehran",
                                    "Asia/Thimphu",
                                    "Asia/Tokyo",
                                    "Asia/Ulaanbaatar",
                                    "Asia/Urumqi",
                                    "Asia/Vientiane",
                                    "Asia/Vladivostok",
                                    "Asia/Yakutsk",
                                    "Asia/Yekaterinburg",
                                    "Asia/Yerevan",
                                    "Atlantic/Azores",
                                    "Atlantic/Bermuda",
                                    "Atlantic/Canary",
                                    "Atlantic/Cape_Verde",
                                    "Atlantic/Faroe",
                                    "Atlantic/Madeira",
                                    "Atlantic/Reykjavik",
                                    "Atlantic/South_Georgia",
                                    "Atlantic/St_Helena",
                                    "Atlantic/Stanley",
                                    "Australia/Adelaide",
                                    "Australia/Brisbane",
                                    "Australia/Broken_Hill",
                                    "Australia/Currie",
                                    "Australia/Darwin",
                                    "Australia/Eucla",
                                    "Australia/Hobart",
                                    "Australia/Lindeman",
                                    "Australia/Lord_Howe",
                                    "Australia/Melbourne",
                                    "Australia/Perth",
                                    "Australia/Sydney",
                                    "Coordinated Universal Time",
                                    "Europe/Amsterdam",
                                    "Europe/Andorra",
                                    "Europe/Athens",
                                    "Europe/Belgrade",
                                    "Europe/Berlin",
                                    "Europe/Bratislava",
                                    "Europe/Brussels",
                                    "Europe/Bucharest",
                                    "Europe/Budapest",
                                    "Europe/Chisinau",
                                    "Europe/Copenhagen",
                                    "Europe/Dublin",
                                    "Europe/Gibraltar",
                                    "Europe/Guernsey",
                                    "Europe/Helsinki",
                                    "Europe/Isle_of_Man",
                                    "Europe/Istanbul",
                                    "Europe/Jersey",
                                    "Europe/Kaliningrad",
                                    "Europe/Kiev",
                                    "Europe/Lisbon",
                                    "Europe/Ljubljana",
                                    "Europe/London",
                                    "Europe/Luxembourg",
                                    "Europe/Madrid",
                                    "Europe/Malta",
                                    "Europe/Mariehamn",
                                    "Europe/Minsk",
                                    "Europe/Monaco",
                                    "Europe/Moscow",
                                    "Europe/Oslo",
                                    "Europe/Paris",
                                    "Europe/Podgorica",
                                    "Europe/Prague",
                                    "Europe/Riga",
                                    "Europe/Rome",
                                    "Europe/Samara",
                                    "Europe/San_Marino",
                                    "Europe/Sarajevo",
                                    "Europe/Simferopol",
                                    "Europe/Skopje",
                                    "Europe/Sofia",
                                    "Europe/Stockholm",
                                    "Europe/Tallinn",
                                    "Europe/Tirane",
                                    "Europe/Uzhgorod",
                                    "Europe/Vaduz",
                                    "Europe/Vatican",
                                    "Europe/Vienna",
                                    "Europe/Vilnius",
                                    "Europe/Volgograd",
                                    "Europe/Warsaw",
                                    "Europe/Zagreb",
                                    "Europe/Zaporozhye",
                                    "Europe/Zurich",
                                    "Indian/Antananarivo",
                                    "Indian/Chagos",
                                    "Indian/Christmas",
                                    "Indian/Cocos",
                                    "Indian/Comoro",
                                    "Indian/Kerguelen",
                                    "Indian/Mahe",
                                    "Indian/Maldives",
                                    "Indian/Mauritius",
                                    "Indian/Mayotte",
                                    "Indian/Reunion",
                                    "Pacific/Apia",
                                    "Pacific/Auckland",
                                    "Pacific/Chatham",
                                    "Pacific/Chuuk",
                                    "Pacific/Easter",
                                    "Pacific/Efate",
                                    "Pacific/Enderbury",
                                    "Pacific/Fakaofo",
                                    "Pacific/Fiji",
                                    "Pacific/Funafuti",
                                    "Pacific/Galapagos",
                                    "Pacific/Gambier",
                                    "Pacific/Guadalcanal",
                                    "Pacific/Guam",
                                    "Pacific/Honolulu",
                                    "Pacific/Johnston",
                                    "Pacific/Kiritimati",
                                    "Pacific/Kosrae",
                                    "Pacific/Kwajalein",
                                    "Pacific/Majuro",
                                    "Pacific/Marquesas",
                                    "Pacific/Midway",
                                    "Pacific/Nauru",
                                    "Pacific/Niue",
                                    "Pacific/Norfolk",
                                    "Pacific/Noumea",
                                    "Pacific/Pago_Pago",
                                    "Pacific/Palau",
                                    "Pacific/Pitcairn",
                                    "Pacific/Pohnpei",
                                    "Pacific/Port_Moresby",
                                    "Pacific/Rarotonga",
                                    "Pacific/Saipan",
                                    "Pacific/Tahiti",
                                    "Pacific/Tarawa",
                                    "Pacific/Tongatapu",
                                    "Pacific/Wake",
                                    "Pacific/Wallis"
                                ]
                            }
                        }
                    }
                ]
            },
            "fabric.dnsProfiles": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "default_domain": {
                                "description": "List of Remote Hosts.",
                                "type": "domain",
                                "x-omitempty": true
                            },
                            "dns_providers": {
                                "description": "List of Remote Hosts.",
                                "type": "list_of_hosts",
                                "x-omitempty": true
                            },
                            "dns_domains": {
                                "description": "List of Remote Hosts.",
                                "type": "list_of_domains",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "default_domain": "",
                                "description": ""                                
                            },
                            "preferred": {
                                "description": "Preferred DNS Server.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "dns_domains": "",
                                "dns_providers": "",
                                "management_epg": "",
                                "preferred": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "fabric.Ntp": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "hostname": {
                                "description": "Hostname.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "key_id": {
                                "description": "NTP Key Options.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 65535,
                                "x-omitempty": true
                            },
                            "maximum_polling_interval": {
                                "description": "The Maximum Polling Interval.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 4,
                                "maximum": 16,
                                "x-omitempty": true
                            },
                            "minimum_polling_interval": {
                                "description": "The Minimum Polling Interval.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 4,
                                "maximum": 16,
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "description": "",
                                "key_id": ""                                
                            },
                            "preferred": {
                                "description": "If the NTP Server is Preferred or not.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "required_args": {
                                "hostname": "",
                                "management_epg": "",
                                "maximum_polling_interval": "",
                                "minimum_polling_interval": "",
                                "preferred": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "fabric.NtpKeys": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "authentication_type": {
                                "description": "The Authentication Protocol to use.",
                                "type": "list_of_values",
                                "enum": [
                                    "md5",
                                    "sha1"
                                ],
                                "default": "sha1",
                                "x-omitempty": true
                            },
                            "key": {
                                "description": "NTP Key Value.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 40,
                                "pattern": "^[\\S+]{1,40}$",
                                "x-omitempty": true
                            },
                            "key_id": {
                                "description": "NTP Key Variable Identifier.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 5,
                                "x-omitempty": true
                            },
                            "optional_args": {},
                            "required_args": {
                                "authentication_type": "",
                                "key_id": "",
                                "site_group": "",
                                "trusted": ""
                            },
                            "trusted": {
                                "description": "If the NTP Key is trusted or not.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "fabric.recommendedSettings": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "fabric_node_controls": {
                                "description": "Boolean to configure or not configure Fabric Node Controls best practices.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "l3_interface": {
                                "description": "Boolean to configure or not configure L3 Interface best practices.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "optional_args": {
                            },
                            "pods": {
                                "description": "Boolean to configure or not configure Pod Profile/Policy Group.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "required_args": {
                                "site_group": "",
                                "fabric_node_controls": "",
                                "l3_interface": "",
                                "pods": ""
                            }
                        }
                    }
                ]
            },
            "fabric.snmpClientGroups": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "clients": {
                                "description": "List of Client Group Clients.",
                                "type": "list_of_hosts",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "description": ""
                            },
                            "required_args": {
                                "clients": "",
                                "management_epg": "",
                                "name": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "fabric.snmpCommunities": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "community_variable": {
                                "description": "Communtiy Variable Check.",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 5,
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "description": ""
                            },
                            "required_args": {
                                "community_variable": "",
                                "site_group": ""
                            },
                            "snmp_community": {
                                "description": "Community String.",
                                "type": "string",
                                "minimum": 8,
                                "maximum": 32,
                                "pattern": "^([a-zA-Z0-9\\-\\_\\.]+){8,32}$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "fabric.snmpDestinations": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "community_variable": {
                                "description": "Communtiy Variable Check.",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 5,
                                "x-omitempty": true
                            },
                            "host": {
                                "description": "host.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "community_variable": "",
                                "username": "",
                                "v3_security_level": ""
                            },
                            "port": {
                                "description": "SNMP Trap Port.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 65535,
                                "default": 162,
                                "x-omitempty": true
                            },
                            "snmp_community": {
                                "description": "Community String.",
                                "type": "string",
                                "minimum": 8,
                                "maximum": 32,
                                "pattern": "^([a-zA-Z0-9\\-\\_\\.]+){8,32}$",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "host": "",
                                "management_epg": "",
                                "port": "",
                                "site_group": "",
                                "version": ""
                            },
                            "v3_security_level": {
                                "description": "The SNMPv3 Security Level.",
                                "type": "list_of_values",
                                "enum": [
                                    "auth",
                                    "noauth",
                                    "priv"
                                ],
                                "default": "priv",
                                "x-omitempty": true
                            },
                            "version": {
                                "description": "SNMP Version.",
                                "type": "list_of_values",
                                "enum": [
                                    "v1",
                                    "v2c",
                                    "v3"
                                ],
                                "default": "v3",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "fabric.snmpPolicy": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "audit_logs": {
                                "description": "Audit Log Values.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "contact": {
                                "description": "SNMP Policy contact information field.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 255,
                                "pattern": "^[a-zA-Z0-9\\\\!#$%()*,-./:;@ _{|}~?&+]+$",
                                "x-omitempty": true
                            },
                            "events": {
                                "description": "Audit Log Values.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "faults": {
                                "description": "Faults Values.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "location": {
                                "description": "SNMP location field.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 128,
                                "pattern": "^[a-zA-Z0-9\\\\!#$%()*,-./:;@ _{|}~?&+]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "contact": "",
                                "location": ""
                            },
                            "required_args": {
                                "admin_state": "",
                                "audit_logs": "",
                                "events": "",
                                "faults": "",
                                "session_logs": "",
                                "site_group": ""
                            },
                            "session_logs": {
                                "description": "Session Log Values.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "fabric.snmpUsers": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "authorization_key": {
                                "description": "SNMP Authorization Variable Number.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 5,
                                "x-omitempty": true
                            },
                            "authorization_type": {
                                "description": "SNMP User Authorization Type.",
                                "type": "list_of_values",
                                "enum": [
                                    "hmac-md5-96",
                                    "hmac-sha1-96",
                                    "hmac-sha2-224",
                                    "hmac-sha2-256",
                                    "hmac-sha2-384",
                                    "hmac-sha2-512"
                                ],
                                "default": "hmac-sha1-96",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "privacy_key": "",
                                "privacy_type": ""
                            },
                            "privacy_key": {
                                "description": "SNMP Privacy Variable Number.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 5,
                                "x-omitempty": true
                            },
                            "privacy_type": {
                                "description": "SNMP User Privacy Type.",
                                "type": "list_of_values",
                                "enum": [
                                    "aes-128",
                                    "des",
                                    "none"
                                ],
                                "default": "none",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "authorization_key": "",
                                "authorization_type": "",
                                "site_group": "",
                                "username": ""
                            },
                            "snmp_key": {
                                "description": "SNMP Authorization/Privacy Keys.",
                                "type": "string",
                                "minimum": 8,
                                "maximum": 130,
                                "pattern": "^[\\S+]{8,130}$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "globalData": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "admin_state": {
                                "description": "Admin State Global Value.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "enabled",
                                "x-omitempty": true
                            },
                            "alias": {
                                "description": "Name alias field.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 63,
                                "pattern": "^[a-zA-Z0-9_.-]+$",
                                "x-omitempty": true
                            },
                            "annotation": {
                                "description": "Annotation field.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 128,
                                "pattern": "^[a-zA-Z0-9\\\\!#$%()*,-./:;@ _{|}~?&+]+$",
                                "x-omitempty": true
                            },
                            "annotations": {
                                "description": "Annotations Key Value Pair.",
                                "type": "key_value",
                                "key_minimum": 1,
                                "key_maximum": 128,
                                "key_pattern": "^[^<>]+$",
                                "value_minimum": 1,
                                "value_maximum": 128,
                                "value_pattern": "^[^<>]+$",
                                "x-omitempty": true
                            },
                            "application_profile": {
                                "description": "The Name of an Existing Application Profile.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "audit_logs": {
                                "description": "Audit Log Values.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "bridge_domain": {
                                "description": "Name of th Bridge Domain.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "cdp_interface_policy": {
                                "description": "Name of the CDP Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "description": {
                                "description": "Description field.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 128,
                                "pattern": "^[a-zA-Z0-9\\\\!#$%()*,-./:;@ _{|}~?&+]+$",
                                "x-omitempty": true
                            },
                            "events": {
                                "description": "Audit Log Values.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "faults": {
                                "description": "Faults Values.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "filter_name": {
                                "description": "Filter entry name field.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "global_alias": {
                                "description": "Alias field.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "l3out": {
                                "description": "L3Out name.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "lldp_interface_policy": {
                                "description": "Name of the LLDP Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "login_domain": {
                                "description": "Login Domain.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 10,
                                "pattern": "^([a-zA-Z0-9][a-zA-Z0-9\\_]+)$",
                                "x-omitempty": true
                            },
                            "management_epg": {
                                "description": "Management EPG.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "management_epg_type": {
                                "description": "The Type of Management EPG.",
                                "type": "list_of_values",
                                "enum": [
                                    "inb",
                                    "oob"
                                ],
                                "default": "oob",
                                "x-omitempty": true
                            },
                            "monitoring_policy": {
                                "description": "Monitoring Policy Name.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "name": {
                                "description": "Name for the Object to Create.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "netflow_monitor_policies": {
                                "description": "A NetFlow Monitor Policies identifies packet flows for ingress IP packets and provides statistics based on these packet flows.  This should be configured as a list of strings with each string having a colon to seperate the policy name and the filter type.  There are three IP Filter types: * ce * ipv4 * ipv6. So to do a list of these you would do: 'default:ce,default:ipv4,my_policy:ipv6'",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^(ce|ipv(4|6)):[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "node_id": {
                                "description": "Node Identifier.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 101,
                                "maximum": 4000,
                                "default": 101,
                                "x-omitempty": true
                            },
                            "physical_domain": {
                                "description": "physical domain name field.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "pod_id": {
                                "description": "Pod Identifier.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 255,
                                "default": 1,
                                "x-omitempty": true
                            },
                            "policy_source_tenant": {
                                "description": "The Name of the Tenant that contains the policies like protocol policies, monitor policies, etc.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "policy_name": {
                                "description": "Name of the Shared Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "port_channel_policy": {
                                "description": "Name of the Port-Channel Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "profile_name": {
                                "description": "Name of the Shared Profile.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "qos_class": {
                                "description": "The QoS priority class identifier.  QoS priority classes are not inherited with Contract Inheritance.",
                                "type": "list_of_values",
                                "enum": [
                                    "level1",
                                    "level2",
                                    "level3",
                                    "level4",
                                    "level5",
                                    "level6",
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "schema": {
                                "description": "Name of the Schema to Assign.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "session_logs": {
                                "description": "Session Log Values.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "site_name": {
                                "description": "Site name.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "sites": {
                                "description": "List of Site names.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "software_version": {
                                "description": "Switch software version for Maintenance Group.",
                                "type": "string",
                                "minimum": 14,
                                "maximum": 17,
                                "pattern": "^(n9000\\-\\d{2}|^simsw-\\d{1})\\.\\d{1,2}\\(\\d{1,2}[a-z]\\)$",
                                "x-omitempty": true
                            },
                            "target_dscp": {
                                "description": "Target DSCP Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "AF11",
                                    "AF12",
                                    "AF13",
                                    "AF21",
                                    "AF22",
                                    "AF23",
                                    "AF31",
                                    "AF32",
                                    "AF33",
                                    "AF41",
                                    "AF42",
                                    "AF43",
                                    "CS0",
                                    "CS1",
                                    "CS2",
                                    "CS3",
                                    "CS4",
                                    "CS5",
                                    "CS6",
                                    "CS7",
                                    "EF",
                                    "VA",
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "template": {
                                "description": "Nexus Dashboard Orchestrator Template name.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "tenant": {
                                "description": "Tenant name.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "username": {
                                "description": "SNMP username.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 31,
                                "pattern": "^[a-zA-Z][a-zA-Z0-9_.@-]{0,31}$",
                                "x-omitempty": true
                            },
                            "vmm_domain": {
                                "description": "VMM domain name field.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "vrf": {
                                "description": "Name of the VRF.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "site.Groups": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "optional_args": {
                                "site_3": "",
                                "site_4": "",
                                "site_5": "",
                                "site_6": "",
                                "site_7": "",
                                "site_8": "",
                                "site_9": "",
                                "site_10": ""
                            },
                            "required_args": {
                                "site_1": "",
                                "site_2": "",
                                "site_group": ""
                            },
                            "site_1": {
                                "description": "Site Identifier.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 100,
                                "default": 1,
                                "x-omitempty": true
                            },
                            "site_2": {
                                "description": "Site Identifier.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 100,
                                "default": 2,
                                "x-omitempty": true
                            },
                            "site_3": {
                                "description": "Site Identifier.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 100,
                                "default": null,
                                "x-omitempty": true
                            },
                            "site_4": {
                                "description": "Site Identifier.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 100,
                                "default": null,
                                "x-omitempty": true
                            },
                            "site_5": {
                                "description": "Site Identifier.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 100,
                                "default": null,
                                "x-omitempty": true
                            },
                            "site_6": {
                                "description": "Site Identifier.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 100,
                                "default": null,
                                "x-omitempty": true
                            },
                            "site_7": {
                                "description": "Site Identifier.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 100,
                                "default": null,
                                "x-omitempty": true
                            },
                            "site_8": {
                                "description": "Site Identifier.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 100,
                                "default": null,
                                "x-omitempty": true
                            },
                            "site_9": {
                                "description": "Site Identifier.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 100,
                                "default": 9,
                                "x-omitempty": true
                            },
                            "site_10": {
                                "description": "Site Identifier.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 100,
                                "default": 10,
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "site.Identifiers": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "auth_type": {
                                "description": "Type of Authentication to use for the Target System.",
                                "type": "list_of_values",
                                "enum": [
                                    "ssh-key",
                                    "username"
                                ],
                                "default": "username",
                                "x-omitempty": true
                            },
                            "configure_terraform_cloud": {
                                "description": "Flag to Enable or Disable Terraform Cloud.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "controller": {
                                "description": "Site Controller (APIC/NDO).",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "controller_type": {
                                "description": "Type of Controller for the Target Site.",
                                "type": "list_of_values",
                                "enum": [
                                    "apic",
                                    "ndo"
                                ],
                                "default": "apic",
                                "x-omitempty": true
                            },
                            "password": {
                                "description": "APIC or Nexus Dashboard User Password.",
                                "minimum": 2,
                                "maximum": 255,
                                "pattern": "^[\\S+]{2,255}$"
                            },
                            "optional_args": {
                                "login_domain": "",
                                "username": ""
                            },
                            "required_args": {
                                "auth_type": "",
                                "configure_terraform_cloud": "",
                                "controller": "",
                                "controller_type": "",
                                "run_location": "",
                                "site_id": "",
                                "site_name": ""
                            },
                            "run_location": {
                                "description": "Will the Code be executed in Terraform Cloud or on the local Machine.",
                                "type": "list_of_values",
                                "enum": [
                                    "local",
                                    "tfc"
                                ],
                                "default": "tfc",
                                "x-omitempty": true
                            },
                            "site_id": {
                                "description": "Site Identifier.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 15,
                                "default": 1,
                                "x-omitempty": true
                            },
                            "site_name": {
                                "description": "Site Name Field.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 32,
                                "pattern": "^[a-zA-Z0-9_]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "system.apicConnectivityPreference": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "interface_to_use_for_external_connections": {
                                "description": "APIC Interface connectivity Preference.",
                                "type": "list_of_values",
                                "enum": [
                                    "ooband",
                                    "inband"
                                ],
                                "default": "inband",
                                "x-omitempty": true
                            },
                            "optional_args": {},
                            "required_args": {
                                "interface_to_use_for_external_connections": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "system.bgpASN": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "autonomous_system_number": {
                                "description": "BGP ASN.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 4294967295,
                                "default": 6501,
                                "x-omitempty": true
                            },
                            "optional_args": {},
                            "required_args": {
                                "autonomous_system_number": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "system.bgpRouteReflector": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "route_reflector_nodes": {
                                "description": "BGP Route Reflector List.",
                                "type": "list_of_integer",
                                "format": "int64",
                                "minimum": 101,
                                "maximum": 4000,
                                "default": 101,
                                "x-omitempty": true
                            },
                            "optional_args": {},
                            "required_args": {
                                "pod_id": "",
                                "route_reflector_nodes": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "system.recommendedSettings": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "aes_passphrase": {
                                "minimum": 16,
                                "maximum": 32,
                                "pattern": "^[\\S+]{16,32}$"
                            },
                            "coop_group": {
                                "description": "Boolean to configure or not configure Coop Group best practices.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "endpoint_controls": {
                                "description": "Boolean to configure or not configure Endpoint Controls best practices.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "fabric_wide_settings": {
                                "description": "Boolean to configure or not configure Fabric Wide Settings best practices.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "global_aes_encryption_settings": {
                                "description": "Boolean to configure or not configure Global AES Encryption Settings best practices.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "isis_policy": {
                                "description": "Boolean to configure or not configure IS-IS Policy best practices.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "optional_args": {
                            },
                            "port_tracking": {
                                "description": "Boolean to configure or not configure Port Tracking best practices.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "ptp_and_latency_measurement": {
                                "description": "Boolean to configure or not configure PTP and Latency Measurement best practices.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "required_args": {
                                "coop_group": "",
                                "endpoint_controls": "",
                                "fabric_wide_settings": "",
                                "global_aes_encryption_settings": "",
                                "isis_policy": "",
                                "port_tracking": "",
                                "ptp_and_latency_measurement": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "tenants.apic.InbandMgmt": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "inband_epg": {
                                "description": "APIC Inband Management EPG.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "apic_node_id": {
                                "description": "APIC Node Identifier.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 15,
                                "default": 1,
                                "x-omitempty": true
                            },
                            "ipv4_address": {
                                "description": "IPv4 Address of the Inband Management Interface.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "ipv4_gateway": {
                                "description": "IPv4 Gateway of the Inband Management Interface.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "ipv6_address": {
                                "description": "IPv6 Address of the Inband Management Interface.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "ipv6_gateway": {
                                "description": "IPv6 Gateway of the Inband Management Interface.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "ipv4_address": "",
                                "ipv4_gateway": "",
                                "ipv6_address": "",
                                "ipv6_gateway": ""
                            },
                            "required_args": {
                                "inband_epg": "",
                                "apic_node_id": "",
                                "pod_id": "",
                                "site_group": ""
                            }
                        }
                    }
                ]
            },
            "tenants.applicationEpg.Templates": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "contract_exception_tag": {
                                "description": "The contract exception tag value.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 512,
                                "pattern": "^[\\S]+$",
                                "x-omitempty": true
                            },
                            "custom_qos": {
                                "description": "Name of an Existing custom QoS Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "data_plane_policer": {
                                "description": "Name of an Existing Data Plane Policer Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "epg_admin_state": {
                                "description": "EPG Admin State.",
                                "type": "list_of_values",
                                "enum": [
                                    "admin_up",
                                    "admin_shut"
                                ],
                                "default": "admin_up",
                                "x-omitempty": true
                            },
                            "epg_contract_masters": {
                                "description": "Input Format is 'application_profile:application_epg'.  The Name of an Existing EPG that will serve as a contract master for this EPG, from which this EPG will inherit contracts (you must have previously created the contract master EPG.)",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 128,
                                "pattern": "^[a-zA-Z0-9_.:-]+:[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "epg_to_aaeps": {
                                "description": "Name(s) of the Attachable Entity Profile Policy to Assign this to this Application EPG Template.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "epg_to_aaep_mode": {
                                "description": "Mode for Application EPG to AAEP Mappings.",
                                "type": "list_of_values",
                                "enum": [
                                    "access",
                                    "dot1p",
                                    "trunk"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "epg_type": {
                                "description": "The Type of EPG to apply this to.",
                                "type": "list_of_values",
                                "enum": [
                                    "inb",
                                    "oob",
                                    "standard"
                                ],
                                "default": "standard",
                                "x-omitempty": true
                            },
                            "fhs_trust_control_policy": {
                                "description": "The Name of an Existing First Hop Security Trust Contol Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "fibre_channel_domain_association": {
                                "description": "The Name of an Existing Fibre Channel Domain.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "flood_in_encapsulation": {
                                "description": "Flood in Encapsulation.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "disabled",
                                "x-omitempty": true
                            },
                            "has_multicast_source": {
                                "description": "EPG with Multisite Multicast Source",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "intra_epg_isolation": {
                                "description": "Intra EPG Isolation.",
                                "type": "list_of_values",
                                "enum": [
                                    "enforced",
                                    "unenforced"
                                ],
                                "default": "unenforced",
                                "x-omitempty": true
                            },
                            "label_match_criteria": {
                                "description": "Label Match Criteria.",
                                "type": "list_of_values",
                                "enum": [
                                    "All",
                                    "AtleastOne",
                                    "AtmostOne",
                                    "None"
                                ],
                                "default": "AtleastOne",
                                "x-omitempty": true
                            },
                            "ndo_settings": {
                                "description": "Name of the NDO Settings Policy to Associate to the Application EPG Template.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "contract_exception_tag": "",
                                "custom_qos": "",
                                "data_plane_policer": "",
                                "epg_contract_masters": "",
                                "epg_to_aaep_mode": "",
                                "epg_to_aaeps": "",
                                "fhs_trust_control_policy": "",
                                "physical_domains": "",
                                "ndo_settings": "",
                                "fibre_channel_domain_association": "",
                                "vmm_domains": "",
                                "vmm_template": ""
                            },
                            "physical_domains": {
                                "description": "Name(s) of the Physical Domains to Associate to the Application EPG Template.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "preferred_group_member": {
                                "description": "If an EPG is marked as a Preferred Group Member, it is put into an internally created contract group where all members of the group are allowed to communicate with each other without requiring a contract between them.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "required_args": {
                                "epg_type": "",
                                "flood_in_encapsulation": "",
                                "has_multicast_source": "",
                                "intra_epg_isolation": "",
                                "label_match_criteria": "",
                                "preferred_group_member": "",
                                "qos_class": "",
                                "site_group": "",
                                "template_name": "",
                                "useg_epg": ""
                            },
                            "template_name": {
                                "description": "Name for this Appication EPG Template.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "useg_epg": {
                                "description": "Micro-Segmentation EPG.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "vmm_domains": {
                                "description": "Name(s) of the VMM Domains to Associate to the Application EPG Template.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "vmm_template": {
                                "description": "Name of the VMM Domain Template to Assign to the Application EPG Template.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.applicationEpg.VMMSites": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "optional_args": {
                            },
                            "required_args": {
                                "vmm_domain": "",
                                "vmm_sites": ""
                            },
                            "vmm_domain": {
                                "description": "Name for the VMM Domain.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "vmm_sites": {
                                "description": "Name(s) for the Nexus Dashboard Sites to Associate to the VMM Domain.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.applicationEpg.VMMTemplates": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "allow_micro_segmentation": {
                                "description": "Allows microsegmentation for the base EPG.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "allow_promiscuous": {
                                "description": "Allows all packets to pass to the VMM domain, which is often used to monitor network activity.  * Accept — All traffic is received within the VMM domain.  * Reject — Packets that do not include the network address are dropped.  The default is Reject.",
                                "type": "list_of_values",
                                "enum": [
                                    "accept",
                                    "reject"
                                ],
                                "default": "reject",
                                "x-omitempty": true
                            },
                            "deploy_immediacy": {
                                "description": "Once policies are downloaded to the leaf software, deployment immediacy can specify when the policy is pushed into the hardware policy CAM. The options are:  * Immediate: Specifies that the policy is programmed in the hardware policy CAM when the policy is downloaded in the leaf software.  * On Demand: Specifies that the policy is programmed in the hardware policy CAM only when the first packet is received through the data path. This process helps to optimize the hardware space.  The default is On Demand.",
                                "type": "list_of_values",
                                "enum": [
                                    "immediate",
                                    "on-demand"
                                ],
                                "default": "on-demand",
                                "x-omitempty": true
                            },
                            "enhanced_lag_policy": {
                                "description": "Name of an Existing enhanced LAG Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "forged_transmits": {
                                "description": "Specifies whether to allow forged transmits. A forged transmit occurs when a network adapter starts sending out traffic that identifies itself as something else. This security policy compares the effective address of the virtual network adapter and the source address inside of an 802.3 Ethernet frame generated by the virtual machine to ensure that they match.  * Reject—All non-matching frames are dropped.  * Accept—Non-matching frames are received.  The default is Reject.",
                                "type": "list_of_values",
                                "enum": [
                                    "accept",
                                    "reject"
                                ],
                                "default": "reject",
                                "x-omitempty": true
                            },
                            "mac_changes": {
                                "description": "Allows definition of new MAC addresses for the network adapter within the virtual machine (VM).  * Reject—Does not allow new MAC addresses.  * Accept—Allows new MAC addresses.  The default is Reject.",
                                "type": "list_of_values",
                                "enum": [
                                    "accept",
                                    "reject"
                                ],
                                "default": "reject",
                                "x-omitempty": true
                            },
                            "netflow": {
                                "description": "Allows you to enable or disable NetFlow.",
                                "type": "list_of_values",
                                "enum": [
                                    "disable",
                                    "enable"
                                ],
                                "default": "disable",
                                "x-omitempty": true
                            },
                            "number_of_ports": {
                                "description": "Maximum number of ports to create.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 65535,
                                "default": 0,
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "enhanced_lag_policy": ""
                            },
                            "port_allocation": {
                                "description": "Preferred Group Member.",
                                "type": "list_of_values",
                                "enum": [
                                    "elastic",
                                    "fixed",
                                    "none"
                                ],
                                "default": "none",
                                "x-omitempty": true
                            },
                            "port_binding": {
                                "description": "Enables you to choose a port-binding method:  * dynamic_binding - Dynamic Binding  * ephemeral - Ephemeral  * none - Default  * staticBinding - Static.",
                                "type": "list_of_values",
                                "enum": [
                                    "dynamic_binding",
                                    "ephemeral",
                                    "default",
                                    "static_binding"
                                ],
                                "default": "default",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "allow_micro_segmentation": "",
                                "allow_promiscuous": "",
                                "deploy_immediacy": "",
                                "forged_transmits": "",
                                "mac_changes": "",
                                "netflow": "",
                                "number_of_ports": "",
                                "template_name": "",
                                "port_allocation": "",
                                "port_binding": "",
                                "switch_provider": "",
                                "resolution_immediacy": "",
                                "vlan_mode": ""
                            },
                            "resolution_immediacy": {
                                "description": "Specifies whether policies are resolved immediately or when needed. The options are:  * Immediate: Specifies that EPG policies (including contracts and filters) are downloaded to the associated leaf switch software upon hypervisor attachment to the VMware vSphere Distributed Switch (VDS). LLDP or OpFlex permissions are used to resolve the hypervisor to leaf node attachments.  * On Demand: Specifies that a policy (for example, VLAN, VXLAN bindings, contracts, or filters) is pushed to the leaf node only when a hypervisor is attached to VDS and a VM is placed in the port group (EPG).  * Pre-provision: Specifies that a policy (for example, VLAN, VXLAN binding, contracts, or filters) is downloaded to a leaf switch even before a hypervisor is attached to the VDS, thereby pre-provisioning the configuration on the switch.",
                                "type": "list_of_values",
                                "enum": [
                                    "immediate",
                                    "on-demand",
                                    "pre-provision"
                                ],
                                "default": "on-demand",
                                "x-omitempty": true
                            },
                            "switch_provider": {
                                "description": "The Vendor for the Virtual Switch.",
                                "type": "list_of_values",
                                "enum": [
                                    "CloudFoundry",
                                    "Kubernetes",
                                    "Microsoft",
                                    "OpenShift",
                                    "OpenStack",
                                    "Redhat",
                                    "VMware"
                                ],
                                "default": "reject",
                                "x-omitempty": true
                            },
                            "template_name": {
                                "description": "Name for this Application EPG VMM Template.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "vlan_mode": {
                                "description": "Defines which Method to use to assign the VLAN.",
                                "type": "list_of_values",
                                "enum": [
                                    "dynamic",
                                    "static"
                                ],
                                "default": "dynamic",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.applicationEpgs": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "application_profile": {
                                "description": "The Name of an Existing Application Profile.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "bridge_domain": {
                                "description": "The Name of an Existing Bridge Domain.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "custom_epg_name": {
                                "description": "Enables you to enter a custom name for an EPG when associating the EPG with a Virtual Machine Manager (VMM) domain. The feature is supported for VMware Virtual Distributed Switch (VDS) and Microsoft VM network.  If you enter a custom name for the EPG, the same name is applied to the VMware vCenter port group or the Microsoft VM network. However, if you do not enter a custom name, the EPG-VMM domain association creates a VMware vCenter port group with a name in the format tenant|app_profile|epg_name or a Microsoft VM network with a name in the format tenant|application|epg|domain.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 80,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "epg_template": {
                                "description": "The Name of an Application EPG Template to Assign.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "alias": "",
                                "annotations": "",
                                "custom_epg_name": "",
                                "description": "",
                                "global_alias": "",
                                "vlans": "",
                                "vmm_vlans": ""
                            },
                            "required_args": {
                                "application_profile": "",
                                "bridge_domain": "",
                                "epg_template": "",
                                "name": "",
                                "site_group": "",
                                "tenant": ""
                            },
                            "vlans": {
                                "description": "List of VLANs to assign to Static Interface Bindings.",
                                "type": "list_of_vlans",
                                "x-omitempty": true
                            },
                            "vmm_vlans": {
                                "description": "List of VLANs to assign to the VMM Domain for Static Bindings.",
                                "type": "list_of_vlans",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.applicationProfiles": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "create": {
                                "description": "Flag to Determine if the Object Should be created on the controller.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "ndo_settings": {
                                "description": "Name for the NDO Settings Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "alias": "",
                                "create": "",
                                "description": "",
                                "global_alias": "",
                                "qos_class": "",
                                "ndo_settings": ""
                            },
                            "required_args": {
                                "name": "",
                                "site_group": "",
                                "tenant": ""
                            }
                        }
                    }
                ]
            },
            "tenants.bd.Templates": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "advertise_host_routes": {
                                "description": "Enabling Host Based Routing on the bridge domain, individual host-routes (/32 prefixes) are advertised from the border leaf switches.  Border leaf switches along with the subnet advertise the individual endpoint (EP) prefixes. The route information is advertised only if the host is connected to the local POD. If the EP is moved away from the local POD or once the EP is removed from EP database, the route advertise is then withdrawn.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "arp_flooding": {
                                "description": "Enables ARP flooding, so that the Layer 2 broadcast domain maps IP addresses to the MAC addresses. If flooding is disabled, unicast routing will be performed on the target IP address.  If the BD extends outside of ACI, always set to true.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "dhcp_option_policy": {
                                "description": "The Name of a DHCP Option Policy to assign to the DHCP Relay Label.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "disable_ip_data_plane_learning_for_pbr": {
                                "description": "Change this setting to true, only if the bridge domain is to be associated with policy-based redirect (PBR) enabled endpoint groups.  Note: Use caution when changing the default setting for this field. Setting this option to no can cause suboptimal traffic forwarding for non-PBR scenarios.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "endpoint_retention_policy": {
                                "description": "Name of the Endpoint Retention Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "ep_move_detection_mode": {
                                "description": "When the GARP based detection option is enabled, Cisco ACI will trigger an endpoint move based on GARP packets if the move occurs on the same interface and same EPG.  Note: This can only be used when ARP Flooding is enabled.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "first_hop_security_policy": {
                                "description": "Assign a First Hop Security BD Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "igmp_interface_policy": {
                                "description": "Name of the IGMP Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "igmp_snooping_policy": {
                                "description": "Name of the IGMP Snooping Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "intersite_bum_traffic_allow": {
                                "description": "When extending the bridge domain between sites this option is to permit broadcast unknown multicast (BUM) traffic between the sites.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "intersite_l2_stretch": {
                                "description": "Extend the Bridge Domain between ACI Fabrics.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "ipv6_l3_unknown_multicast": {
                                "description": "The node forwarding parameter for Layer 3 unknown Multicast destinations.",
                                "type": "list_of_values",
                                "enum": [
                                    "flood",
                                    "opt-flood"
                                ],
                                "default": "flood",
                                "x-omitempty": true
                            },
                            "l2_unknown_unicast": {
                                "description": "By default, unicast traffic is flooded to all Layer 2 ports. If enabled, unicast traffic flooding is blocked at a specific port, only permitting egress traffic with MAC addresses that are known to exist on the port. When the BD has L2 Unknown Unicast set to Flood, if an endpoint is deleted the system deletes it from both the local leaf switches as well as the remote leaf switches where the BD is deployed, by selecting Clear Remote MAC Entries. Without this feature, the remote leaf continues to have this endpoint learned until the timer expires.  CAUTION:  Modifying the L2 Unknown Unicast setting causes traffic to bounce (go down and up) on interfaces to devices attached to EPGs associated with this bridge domain.",
                                "type": "list_of_values",
                                "enum": [
                                    "flood",
                                    "proxy"
                                ],
                                "default": "proxy",
                                "x-omitempty": true
                            },
                            "l3_unknown_multicast_flooding": {
                                "description": "The node forwarding parameter for Layer 3 unknown Multicast destinations. The value can be:  * flood — Send the data to the front panel ports if a router port exists on any bridge domain or send the data to the fabric if the data is in transit.  * opt-flood — Send the data only to router ports in the fabric.",
                                "type": "list_of_values",
                                "enum": [
                                    "flood",
                                    "opt-flood"
                                ],
                                "default": "flood",
                                "x-omitempty": true
                            },
                            "limit_ip_learn_to_subnets": {
                                "description": "Limits IP address learning to the bridge domain subnets only. Every bridge domain can have multiple subnets associated with it. By default, all IP addresses are learned.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "mld_snoop_policy": {
                                "description": "Name of the MLD Snooping Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "multi_destination_flooding": {
                                "description": "The multiple destination forwarding method for L2 Multicast, Broadcast, and Link Layer traffic types. The method can be:  bd-flood — Sends the data to all ports on the same bridge domain, drop — Drops Packet. Never sends the data to any other ports., encap-flood — Sends the data to the ports on the same VLAN within the bridge domain regardless of the EPG, with the exception that data for the following protocols is flooded to the entire bridge domain: ARP/GARP, BGP, EIGRP, IGMP, IS-IS, OSPF/OSPFv6, ND, and PIM",
                                "type": "list_of_values",
                                "enum": [
                                    "bd-flood",
                                    "drop",
                                    "encap-flood"
                                ],
                                "default": "bd-flood",
                                "x-omitempty": true
                            },
                            "names": {
                                "description": "A list of DHCP Relay Policies to assign to the Bridge Domain.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "nd_policy": {
                                "description": "Assign a Neighbor discovery (ND) Interface policy, that supports IPv6 services for the bridge domain.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "ndo_settings": {
                                "description": "Name for the NDO Settings Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optimize_wan_bandwidth": {
                                "description": "Optimize WAN Bandwidth when stretching a BD over Multi-Site",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "dhcp_option_policy": "",
                                "first_hop_security_policy": "",
                                "endpoint_retention_policy": "",
                                "igmp_interface_policy": "",
                                "igmp_snooping_policy": "",
                                "mld_snoop_policy": "",
                                "names": "",
                                "nd_policy": "",
                                "ndo_settings": "",
                                "netflow_monitor_policies": "",
                                "scope": "",
                                "rogue_coop_exception_list": "",
                                "route_profile": "",
                                "vrf_tenant": ""
                            },
                            "pim": {
                                "description": "Enables the Protocol Independent Multicast (PIM) protocol.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "pimv6": {
                                "description": "Enables the Protocol Independent Multicast (PIM) IPv6 protocol.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "required_args": {
                                "advertise_host_routes": "",
                                "arp_flooding": "",
                                "disable_ip_data_plane_learning_for_pbr": "",
                                "ep_move_detection_mode": "",
                                "intersite_bum_traffic_allow": "",
                                "intersite_l2_stretch": "",
                                "ipv6_l3_unknown_multicast": "",
                                "l2_unknown_unicast": "",
                                "l3_unknown_multicast_flooding": "",
                                "limit_ip_learn_to_subnets": "",
                                "multi_destination_flooding": "",
                                "optimize_wan_bandwidth": "",
                                "pim": "",
                                "pimv6": "",
                                "template_name": "",
                                "type": "",
                                "unicast_routing": "",
                                "vrf": ""
                            },
                            "rogue_coop_exception_list": {
                                "description": "A list of MAC addresses for which you want to have a higher tolerance for endpoint movement with rogue endpoint control before the endpoints get marked as rogue. Endpoints in the rogue/COOP exception list get marked as rogue only if they move 3000 or more times within 10 minutes. After an endpoint is marked as rogue, the endpoint is kept static so that learning is prevented and the traffic to and from the endpoint is dropped. The rogue endpoint is deleted after 30 seconds.",
                                "type": "list_of_macs",
                                "x-omitempty": true
                            },
                            "route_profile": {
                                "description": "Name of the Route Maps for Route Control Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "scope": {
                                "description": "The owner of the target relay. The DHCP relay is any host that forwards DHCP packets between clients and servers. The relays are used to forward requests and replies between clients and servers when they are not on the same physical subnet. The relay owner can be:  * infra — The owner is the infrastructure  * tenant — The owner is the tenant.  The default is infra.",
                                "type": "list_of_values",
                                "enum": [
                                    "infra",
                                    "tenant"
                                ],
                                "default": "infra",
                                "x-omitempty": true
                            },
                            "template_name": {
                                "description": "Name for this Bridge Domain Template.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "type": {
                                "description": "Specifies whether this bridge domain supports Fibre Channel Over Ethernet (FCoE) communication traffic or regular Ethernet communication traffic. The options are:  * fc — Supports FCoE communication over the ACI fabric.  * regular — Supports normal Ethernet communications over the ACI fabric.  * Note:  The FCoE protocol is typically used to support communication between SAN storage devices running on a Fibre Channel (FC) network and host applications running on a non-FC network.",
                                "type": "list_of_values",
                                "enum": [
                                    "fc",
                                    "regular"
                                ],
                                "default": "regular",
                                "x-omitempty": true
                            },
                            "unicast_routing": {
                                "description": "enable or disable unicast routing on the Bridge Domain. We recommend disabling, false,  if you have not configured a subnet on the BD.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "vrf_tenant": {
                                "description": "Name of the VRF Tenant.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.bd.SubnetsTemplates": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "advertise_externally": {
                                "description": "The subnet can be exported to a routed connection.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "ip_data_plane_learning": {
                                "description": "Choose whether to enable or disable IP address learning for this subnet.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "enabled",
                                "x-omitempty": true
                            },
                            "make_this_ip_address_primary": {
                                "description": "Indicates if the subnet is the primary IP address for the bridge domain (preferred over the available alternatives). ",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "nd_ra_prefix_policy": {
                                "description": "Assign a Neighbor discovery (ND) Prefix policy, that supports IPv6 services for the Subnet.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "neighbor_discovery": {
                                "description": "Enables Neighbor Discovery on the subnet.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "no_default_svi_gateway": {
                                "description": "When using Cisco ACI Multi-Site with this APIC fabric domain (site), indicates that the VRF, EPG, or BD using this subnet are mirrored from another site, which has a relationship to this site through a contract. Do not modify or delete the mirrored objects.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "nd_ra_prefix_policy": "",
                                "policy_tags": "",
                                "route_profile": ""
                            },
                            "policy_tags": {
                                "description": "Policy Tags Key Value Pair.",
                                "type": "key_value",
                                "key_minimum": 1,
                                "key_maximum": 128,
                                "key_pattern": "^[^<>]+$",
                                "value_minimum": 1,
                                "value_maximum": 128,
                                "value_pattern": "^[^<>]+$",
                                "x-omitempty": true
                            },
                            "querier_ip": {
                                "description": "Enables IGMP Snooping on the subnet.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "required_args": {
                                "advertise_externally": "",
                                "ip_data_plane_learning": "",
                                "make_this_ip_address_primary": "",
                                "neighbor_discovery": "",
                                "no_default_svi_gateway": "",
                                "querier_ip": "",
                                "shared_between_vrfs": "",
                                "site_group": "",
                                "template_name": "",
                                "treat_as_virtual_ip_address": ""
                            },
                            "route_profile": {
                                "description": "Name of the Route Maps for Route Control Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "shared_between_vrfs": {
                                "description": "The subnet can be shared with and exported to multiple contexts (VRFs) in the same tenant or across tenants as part of a shared service. An example of a shared service is a routed connection to an EPG present in another context (VRF) in a different tenant. This enables traffic to pass in both directions across contexts (VRFs). An EPG that provides a shared service must have its subnet configured under that EPG (not under a bridge domain), and its scope must be set to advertised externally, and shared between VRFs.  Note: Shared subnets must be unique across the contexts (VRF) involved in the communication. When a subnet under an EPG provides a Layer 3 external network shared service, such a subnet must be globally unique within the entire ACI fabric.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "template_name": {
                                "description": "Name for this Bridge Domain Template.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "treat_as_virtual_ip_address": {
                                "description": "An IP address that doesn't correspond to an actual physical network interface, that is shared by multiple devices.  This is typically used for the Common Pervasive Gateway use case. For more information, see Common Pervasive Gateway in Cisco APIC Layer 3 Configuration Guide.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.bridgeDomains": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "application_profile": {
                                "description": "Name of the Application Profile to Assign tot he EPG Template.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "bd_template": {
                                "description": "Name of the Bridge Domain Template.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "custom_mac_address": {
                                "description": "The MAC address of the bridge domain (BD) or switched virtual interface (SVI). By default, a BD takes the fabric wide default MAC address of 00:22:BD:F8:19:FF. Configure this property to override the default address.",
                                "type": "mac_address",
                                "x-omitempty": true
                            },
                            "endpoint_clear": {
                                "description": "Set this to Clear the Endpoint Table on the Bridge Domain.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "epg_template": {
                                "description": "Name of the Application EPG Template.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "flood_in_encapsulation": {
                                "description": "Flood in Encapsulation.",
                                "type": "list_of_values",
                                "enum": [
                                    "admin_up",
                                    "admin_shut"
                                ],
                                "default": "admin_up",
                                "x-omitempty": true
                            },
                            "gateway_ips": {
                                "description": "IPv4 or IPv6 Subnet to Assign to the Bridge Domain.",
                                "type": "list_of_hosts",
                                "x-omitempty": true
                            },
                            "label_match_criteria": {
                                "description": "Label Match Criteria.",
                                "type": "list_of_values",
                                "enum": [
                                    "All",
                                    "AtleastOne",
                                    "AtmostOne",
                                    "None"
                                ],
                                "default": "AtleastOne",
                                "x-omitempty": true
                            },
                            "l3outs": {
                                "description": "Name of the L3Out(s).",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "l3_policy": {
                                "description": "Name of the L3 Conifgurations Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "link_local_ipv6_address": {
                                "description": "Link Local IPv6 Address.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "alias": "",
                                "annotations": "",
                                "application_profile": "",
                                "custom_mac_address": "",
                                "description": "",
                                "endpoint_clear": "",
                                "epg_template": "",
                                "gateway_ips": "",
                                "global_alias": "",
                                "l3outs": "",
                                "link_local_ipv6_address": "",
                                "subnet_templates": "",
                                "virtual_mac_address": "",
                                "vlans": ""
                            },
                            "required_args": {
                                "bd_template": "",
                                "name": "",
                                "site_group": "",
                                "tenant": ""
                            },
                            "subnet_templates": {
                                "description": "Name of the Subnet Template.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "virtual_mac_address": {
                                "description": "The bridge domain virtual MAC address.  Note: The BD virtual MAC address and the subnet virutal IP address must be the same for all ACI fabrics for that bridge domain. Multiple bridge domains can be configured to communicate across connected ACI fabrics. The virtual MAC address and the virtual IP address can be shared across bridge domains.",
                                "type": "mac_address",
                                "x-omitempty": true
                            },
                            "vlans": {
                                "description": "List of either AAEP VLANs or the VLAN for the Inband EPG.  List of 1 or 2",
                                "type": "list_of_vlans",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.contract.Filters": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "optional_args": {
                                "alias": "",
                                "description": "",
                                "annotations": "",
                                "global_alias": ""
                            },
                            "required_args" : {
                                "name": "",
                                "site_group": "",
                                "tenant": ""
                            }
                        }
                    }
                ]
            },
            "tenants.contract.filterEntry": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "acknowledgement": {
                                "description": "TCP Session Rules - Option Acknowledgement.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "arp_flag": {
                                "description": "ARP Flag Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "req",
                                    "reply",
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "destination_port_from": {
                                "description": "The start of the destination port range. The start of the port range is determined by the server type. You can define a single port by specifying the same value in the From and To fields, or you can define a range of ports from 0 to 65535 by specifying different values in the From and To fields.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 512,
                                "pattern": "^(dns|ftpData|http|https|pop3|rtsp|smtp|unspecified|[\\d]{1,4}|[1-6][0-5][0-5][0-3][0-5])$",
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "destination_port_to": {
                                "description": "The end of the destination port range. The end of the port range is determined by the server type. You can define a single port by specifying the same value in the From and To fields, or you can define a range of ports from 0 to 65535 by specifying different values in the From and To fields.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 512,
                                "pattern": "^(dns|ftpData|http|https|pop3|rtsp|smtp|unspecified|[\\d]{1,4}|[1-6][0-5][0-5][0-3][0-5])$",
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "established": {
                                "description": "TCP Session Rules - Option Established.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "ethertype": {
                                "description": "Ether Type Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "arp",
                                    "fcoe",
                                    "ip",
                                    "ipv4",
                                    "ipv6",
                                    "trill",
                                    "mac_security",
                                    "mpls_ucast",
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "filter_name": {
                                "description": "Name of the Filter to assign this entry to.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "finish": {
                                "description": "TCP Session Rules - Option Finish.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "icmpv4_type": {
                                "description": "ICMPv4 Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "dst-unreach",
                                    "echo",
                                    "echo-rep",
                                    "src-quench",
                                    "time-exceeded",
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "icmpv6_type": {
                                "description": "ICMPv6 Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "dst-unreach",
                                    "echo-req",
                                    "echo-rep",
                                    "nbr-solicit",
                                    "nbr-advert",
                                    "redirect", 
                                    "time-exceeded",
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "ip_protocol": {
                                "description": "ICMPv6 Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "egp",
                                    "eigrp",
                                    "igp",
                                    "icmp",
                                    "icmpv6",
                                    "igmp",
                                    "l2tp",
                                    "ospfigp",
                                    "pim",
                                    "tcp",
                                    "udp", 
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "match_dscp": {
                                "description": "Target DSCP Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "AF11",
                                    "AF12",
                                    "AF13",
                                    "AF21",
                                    "AF22",
                                    "AF23",
                                    "AF31",
                                    "AF32",
                                    "AF33",
                                    "AF41",
                                    "AF42",
                                    "AF43",
                                    "CS0",
                                    "CS1",
                                    "CS2",
                                    "CS3",
                                    "CS4",
                                    "CS5",
                                    "CS6",
                                    "CS7",
                                    "EF",
                                    "VA",
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "match_only_fragments": {
                                "description": "Match Only Fragements Values.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "alias": "",
                                "description": "",
                                "global_alias": ""
                            },
                            "required_args" : {
                                "acknowledgement": "",
                                "arp_flag": "",
                                "destination_port_from": "",
                                "destination_port_to": "",
                                "established": "",
                                "ethertype": "",
                                "filter_name": "",
                                "finish": "",
                                "icmpv4_type": "",
                                "icmpv6_type": "",
                                "ip_protocol": "",
                                "name": "",
                                "match_dscp": "",
                                "match_only_fragments": "",
                                "reset": "",
                                "site_group": "",
                                "source_port_from": "",
                                "source_port_to": "",
                                "stateful": "",
                                "synchronize": "",
                                "tenant": ""
                            },
                            "reset": {
                                "description": "TCP Session Rules - Option Reset.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "source_port_from": {
                                "description": "The start of the source port range. The start of the port range is determined by the server type. You can define a single port by specifying the same value in the From and To fields, or you can define a range of ports from 0 to 65535 by specifying different values in the From and To fields.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 512,
                                "pattern": "^(dns|ftpData|http|https|pop3|rtsp|smtp|unspecified|[\\d]{1,4}|[1-6][0-5][0-5][0-3][0-5])$",
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "source_port_to": {
                                "description": "The end of the source port range. The end of the port range is determined by the server type. You can define a single port by specifying the same value in the From and To fields, or you can define a range of ports from 0 to 65535 by specifying different values in the From and To fields.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 512,
                                "pattern": "^(dns|ftpData|http|https|pop3|rtsp|smtp|unspecified|[\\d]{1,4}|[1-6][0-5][0-5][0-3][0-5])$",
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "stateful": {
                                "description": "Stateful Flag Values.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "synchronize": {
                                "description": "TCP Session Rules - Option Synchronize.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.contract.ContractAssignments": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "application_epgs": {
                                "description": "List of EPGs to assign the Contract to.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "application_profile": {
                                "description": "Name of the Application Profile containing the EPGs.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "contract": {
                                "description": "Name of the Contract.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "contract_type": {
                                "description": "Based on the type of contract, how it should be applied.  A standard contract can be applied as a consumer, provider, interface or intra EPG apply type.  Taboo is just taboo.",
                                "type": "list_of_values",
                                "enum": [
                                    "consumed",
                                    "contract_interface",
                                    "intra_epg",
                                    "provided",
                                    "taboo"
                                ],
                                "default": "provided",
                                "x-omitempty": true
                            },
                            "external_epgs": {
                                "description": "List of External EPGs to assign the Contract to.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "l3out": {
                                "description": "Name of the L3Out containing the External EPGs.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "ndo_settings": {
                                "description": "Name for this NDO Schema Policy to Associate to BD's, EPG's, etc.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "application_epgs": "",
                                "application_profile": "",
                                "external_epgs": "",
                                "l3out": "",
                                "ndo_settings": "",
                                "target_tenant": "",
                                "vrfs": ""
                            },
                            "qos_class": {
                                "description": "The QoS priority class identifier.  QoS priority classes are not inherited with Contract Inheritance.",
                                "type": "list_of_values",
                                "enum": [
                                    "level1",
                                    "level2",
                                    "level3",
                                    "level4",
                                    "level5",
                                    "level6",
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "contract": "",
                                "contract_type": "",
                                "qos_class": "",
                                "site_group": "",
                                "target_type": "",
                                "tenant": ""
                            },
                            "target_tenant": {
                                "description": "Name of the Tenant to apply the contract to.  If left blank the source tenant name will be used.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "target_type": {
                                "description": "What is the target object for the Contract.",
                                "type": "list_of_values",
                                "enum": [
                                    "epg",
                                    "external_epg",
                                    "inb",
                                    "oob",
                                    "vrf"
                                ],
                                "default": "epg",
                                "x-omitempty": true
                            },
                            "vrfs": {
                                "description": "List of VRFs to assign the Contract to.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.contract.ContractFilters": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "action": {
                                "description": "Action to be taken when traffic matches filter criteria.",
                                "type": "list_of_values",
                                "enum": [
                                    "deny",
                                    "permit"
                                ],
                                "default": "permit",
                                "x-omitempty": true
                            },
                            "apply_both_directions": {
                                "description": "Flag to apply the contract in both directions.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "contract_name": {
                                "description": "Name of the Contract.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "contract_type": {
                                "description": "Type of Contract.",
                                "type": "list_of_values",
                                "enum": [
                                    "oob",
                                    "standard",
                                    "taboo"
                                ],
                                "default": "standard",
                                "x-omitempty": true
                            },
                            "enable_policy_compression": {
                                "description": "Flag to enable contract data storage optimization.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "filters_to_assign": {
                                "description": "List of Filters to assign to the Contract.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "label_match_criteria": {
                                "description": "Subject Match Criteria.",
                                "type": "list_of_values",
                                "enum": [
                                    "All",
                                    "AtleastOne",
                                    "AtmostOne",
                                    "None"
                                ],
                                "default": "AtleastOne",
                                "x-omitempty": true
                            },
                            "log_packets": {
                                "description": "Enables contract permit and deny logging.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "description": ""
                            },
                            "qos_class": {
                                "description": "The QoS priority class identifier.  QoS priority classes are not inherited with Contract Inheritance.",
                                "type": "list_of_values",
                                "enum": [
                                    "level1",
                                    "level2",
                                    "level3",
                                    "level4",
                                    "level5",
                                    "level6",
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "action": "",
                                "apply_both_directions": "",
                                "contract_name": "",
                                "contract_type": "",
                                "enable_policy_compression": "",
                                "filters_to_assign": "",
                                "label_match_criteria": "",
                                "log_packets": "",
                                "name": "",
                                "qos_class": "",
                                "site_group": "",
                                "target_dscp": "",
                                "tenant": ""
                            },
                            "target_dscp": {
                                "description": "Target DSCP Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "AF11",
                                    "AF12",
                                    "AF13",
                                    "AF21",
                                    "AF22",
                                    "AF23",
                                    "AF31",
                                    "AF32",
                                    "AF33",
                                    "AF41",
                                    "AF42",
                                    "AF43",
                                    "CS0",
                                    "CS1",
                                    "CS2",
                                    "CS3",
                                    "CS4",
                                    "CS5",
                                    "CS6",
                                    "CS7",
                                    "EF",
                                    "VA",
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.contract.Contracts": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "contract_type": {
                                "description": "Type of Contract.",
                                "type": "list_of_values",
                                "enum": [
                                    "oob",
                                    "standard",
                                    "taboo"
                                ],
                                "default": "standard",
                                "x-omitempty": true
                            },
                            "ndo_settings": {
                                "description": "Name for this NDO Schema Policy to Associate to BD's, EPG's, etc.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "alias": "",
                                "annotations": "",
                                "description": "",
                                "global_alias": "",
                                "ndo_settings": ""
                            },
                            "qos_class": {
                                "description": "The QoS priority class identifier.  QoS priority classes are not inherited with Contract Inheritance.",
                                "type": "list_of_values",
                                "enum": [
                                    "level1",
                                    "level2",
                                    "level3",
                                    "level4",
                                    "level5",
                                    "level6",
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "contract_type": "",
                                "name": "",
                                "qos_class": "",
                                "scope": "",
                                "site_group": "",
                                "target_dscp": "",
                                "tenant": ""
                            },
                            "scope": {
                                "description": "The scope of a service contract between two or more EPGs. The states are:  * context — This contract will be applied for endpoint groups associated with the same VRF.  * application-profile — This contract will be applied for endpoint groups in the same application profile.  * tenant — This contract will be applied for endpoint groups within the same tenant.  * global — This contract will be applied for endpoint groups throughout the fabric.  The default is context.",
                                "type": "list_of_values",
                                "enum": [
                                    "application-profile",
                                    "context",
                                    "global",
                                    "tenant"
                                ],
                                "default": "context",
                                "x-omitempty": true
                            },
                            "target_dscp": {
                                "description": "Target DSCP Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "AF11",
                                    "AF12",
                                    "AF13",
                                    "AF21",
                                    "AF22",
                                    "AF23",
                                    "AF31",
                                    "AF32",
                                    "AF33",
                                    "AF41",
                                    "AF42",
                                    "AF43",
                                    "CS0",
                                    "CS1",
                                    "CS2",
                                    "CS3",
                                    "CS4",
                                    "CS5",
                                    "CS6",
                                    "CS7",
                                    "EF",
                                    "VA",
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.L3Out": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "eigrp_as_number": {
                                "description": "A number that uniquely identifies an EIGRP autonomous system. The Autonomous System Number (ASN) can be from 1 to 65534. The numbers 0 and 65535 are reserved.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 65534,
                                "default": null,
                                "x-omitempty": true
                            },
                            "enable_bgp": {
                                "description": "Flag to Advertise the Interface Subnet into OSPF.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "l3_domain": {
                                "description": "Name of the L3 Domain Profile.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "l3out_template": {
                                "description": "Name of the L3Out Template.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "ndo_settings": {
                                "description": "Name for this NDO Schema Policy to Associate to BD's, EPG's, etc.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "alias": "",
                                "annotations": "",
                                "description": "",
                                "eigrp_as_number": "",
                                "global_alias": "",
                                "ndo_settings": "",
                                "ospf_external_profile": ""
                            },
                            "ospf_external_profile": {
                                "description": "Name of the OSPF Routing Profile.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "enable_bgp": "",
                                "l3_domain": "",
                                "l3out_template": "",
                                "name": "",
                                "site_group": "",
                                "tenant": "",
                                "vrf": ""
                            }
                        }
                    }
                ]
            },
            "tenants.L3Out.Templates": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "consumer_label": {
                                "description": "The optional contract consumer label that allows non-infra tenants to consume any Layer 3 EVPN routed policy that is assigned a provider label.  This field specifies the provider label of the Layer 3 EVPN routed policy that this policy wants to use.  Note: Not applicable to L3 outside policies belonging to Tenant infra.",
                                "type": "list_of_values",
                                "enum": [
                                    "hcloudGolfLabel"
                                ],
                                "default": null,
                                "x-omitempty": true
                            },
                            "provider_label": {
                                "description": "The contract provider label for this policy. Any tenant that uses this Layer 3 EVPN routed connection must specify this label as its consumer label.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "export": {
                                "description": "Flag to Advertise the Interface Subnet into OSPF.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "import": {
                                "description": "Flag to Advertise the Interface Subnet into OSPF.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "consumer_label": "",
                                "provider_label": "",
                                "route_controls_for_dampening": "",
                                "route_profiles_for_redistribution": "",
                                "route_profile_for_interleak": ""
                            },
                            "pim": {
                                "description": "Flag to Advertise the Interface Subnet into OSPF.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "pimv6": {
                                "description": "Flag to Advertise the Interface Subnet into OSPF.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "required_args": {
                                "export": "",
                                "import": "",
                                "pim": "",
                                "pimv6": "",
                                "target_dscp": "",
                                "template_name": ""
                            },
                            "route_controls_for_dampening": {
                                "description": "Name for the Route Control/Map to Associate for Dampening.  Dampening minimizes propagation into the fabric of flapping e-BGP routes received from external routers connected to border leaf switches (BLs). Frequently flapping routes from external routers are suppressed on BLs based on configured criteria and prohibited from redistribution to iBGP peers (ACI spine switches). Suppressed routes are reused after a configured time criteria.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 77,
                                "pattern": "^(ipv(4|6)-ucast:[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "route_profiles_for_redistribution": {
                                "description": "Name for the Route Control/Map to Associate for Redistribution.  A route profile allows the user to set attributes, such as community, preference, and metric for route leaking from static.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 74,
                                "pattern": "^(attached-host|direct|static):[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "route_profile_for_interleak": {
                                "description": "Name for the Route Control/Map to Associate for Interleak.   A route profile allows the user to set attributes, such as community, preference, and metric for route leaking from OSPF to BGP.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "target_dscp": {
                                "description": "Target DSCP Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "AF11",
                                    "AF12",
                                    "AF13",
                                    "AF21",
                                    "AF22",
                                    "AF23",
                                    "AF31",
                                    "AF32",
                                    "AF33",
                                    "AF41",
                                    "AF42",
                                    "AF43",
                                    "CS0",
                                    "CS1",
                                    "CS2",
                                    "CS3",
                                    "CS4",
                                    "CS5",
                                    "CS6",
                                    "CS7",
                                    "EF",
                                    "VA",
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "template_name": {
                                "description": "Name for this L3Out - OSPF Routing Template.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.l3out.bgpPeerConnectivityProfile": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "admin_state": {
                                "description": "Allows you to shut down the corresponding BGP neighbor. Using this feature shuts down the BGP sessions without the need to delete the BGP peer configuration.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "disabled",
                                "x-omitempty": true
                            },
                            "bgp_password": {
                                "description": "BGP Password Identifier.",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 5,
                                "x-omitempty": true
                            },
                            "bgp_peer_shared_policy": {
                                "description": "Name for the BGP Shared Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "bgp_peer_prefix_policy": {
                                "description": "Name for an existing BGP Peer Prefix Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "ebgp_multihop_ttl": {
                                "description": "The connection time to live (TTL). The range is from 0 to 255 hops; if zero, no TTL is specified. The default is zero.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 255,
                                "default": 0,
                                "x-omitempty": true
                            },
                            "local_as_number": {
                                "description": "The local autonomous system number (ASN). The local Autonomous System Number can be in 4-byte asplain format from 1 to 4294967295.  Note:  ACI does not support asdot or asdot+ format AS numbers.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 4294967295,
                                "default": null,
                                "x-omitempty": true
                            },
                            "local_as_number_config": {
                                "description": "The local Autonomous System Number (ASN) configuration. Using a local AS number rather than the Global AS permits the routing devices in the associated network to appear to belong to the former AS. The configuration can be:  * no-Prepend+replace-as+dual-as—Does not allow prepending on local AS and is replaced with both AS numbers.  Note: You can prepend one or more autonomous system (AS) numbers at the beginning of an AS path. The AS numbers are added at the beginning of the path after the actual AS number from which the route originates has been added to the path. Prepending an AS path makes a shorter AS path look longer and therefore less preferable to BGP.  * no-prepend—Does not allow prepending on local AS.  * no options—Does not allow alteration of local AS.  * no-Prepend+replace-as—Does not allow prepending on local AS and is replaces AS number.",
                                "type": "list_of_values",
                                "enum": [
                                    "dual-as",
                                    "none",
                                    "no-prepend",
                                    "replace-as"
                                ],
                                "default": "none",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "bgp_password": "",
                                "bgp_peer_prefix_policy": "",
                                "description": "",
                                "local_as_number": "",
                                "policy_source_tenant": ""
                            },
                            "peer_address": {
                                "description": "The peer IP address.",
                                "type": "hostname",
                                "x-omitempty": true
                            },
                            "peer_asn": {
                                "description": "A number that uniquely identifies the neighbor autonomous system. The Autonomous System Number can be in 4-byte asplain format from 1 to 4294967295.  Note:  ACI does not support asdot or asdot+ format AS numbers.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 4294967295,
                                "default": null,
                                "x-omitempty": true
                            },
                            "peer_level": {
                                "description": "The interface type used to source the Peer Connection.",
                                "type": "list_of_values",
                                "enum": [
                                    "interface",
                                    "loopback"
                                ],
                                "default": "loopback",
                                "x-omitempty": true
                            },
                            "policy_source_tenant": {
                                "description": "Name for the tenant in which the BGP Peer Policy was created.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "admin_state": "",
                                "bgp_peer_shared_policy": "",
                                "ebgp_multihop_ttl": "",
                                "local_as_number_config": "",
                                "peer_address": "",
                                "peer_asn": "",
                                "peer_level": "",
                                "weight_for_routes_from_neighbor": ""
                            },
                            "weight_for_routes_from_neighbor": {
                                "description": "The allowed weight for routes from the peer. The weight assigned locally to the router is used to select the best path. The range is from 0 to 65535.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 65535,
                                "default": 0,
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.l3out.bgpPeerConnectivityProfile.Templates": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "af_mcast": {
                                "description": "Flag to to enable the multicast address-family feature.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "af_ucast": {
                                "description": "Flag to to enable the unicast address-family feature.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "allow_self_as": {
                                "description": "Flag to enable the autonomous number check on itself. This allows BGP peer to inject updates if the same AS number is being used.  Note: For an infra tenant peer connectivity profile, this attribute is always enabled.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "allowed_self_as_count": {
                                "description": "The allowed number of occurrences of a local Autonomous System Number (ASN). The range is from 1 to 10. The default is 3.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 10,
                                "default": 3,
                                "x-omitempty": true
                            },
                            "as_override": {
                                "description": "Flag to enable the BGP AS override feature to override the default setting. The AS override function will replace the AS number from the originating router with the AS number of the sending BGP router in the AS Path of outbound routes. This feature can be enabled per feature per address family (IPv4 or IPv6).  Note:  The Disable Peer AS Check check box must also be checked in order to enable the AS override feature.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "bidirectional_forwarding_detection": {
                                "description": "Enables BFD on the peer.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "disable_connected_check": {
                                "description": "Disables the check for peer connection.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "disable_peer_as_check": {
                                "description": "Flag to disable the peer autonomous number check. When the check box is checked, if the advertising router finds the AS number of the receiver in the AS path, it will not send the route to the receiver.  Note: The Disable Peer AS Check check box must be checked in order to enable the AS override feature.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "next_hop_self": {
                                "description": "Sends the BGP next hop attribute to itself.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "optional_args": {
                            },
                            "remove_all_private_as": {
                                "description": "In outgoing eBGP route updates to this neighbor, this option removes all private AS numbers from the AS_PATH, regardless of whether a public AS number is included in the AS_PATH.  If the neighbor remote AS is in the AS_PATH, this option is not applied.  To enable this option, Remove private AS must be enabled.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "remove_private_as": {
                                "description": "In outgoing eBGP route updates to this neighbor, this option removes all private AS numbers from the AS_PATH when the AS_PATH has only private AS numbers.  If the neighbor remote AS is in the AS_PATH, this option is not applied.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "replace_private_as_with_local_as": {
                                "description": "In outgoing eBGP route updates to this neighbor, this option replaces all private AS numbers in the AS_PATH with ACI local AS, regardless of whether a public AS or the neighbor remote AS is included in the AS_PATH.  To enable this option, Remove all private AS must be enabled.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "required_args": {
                                "af_mcast": "",
                                "af_ucast": "",
                                "allow_self_as": "",
                                "allowed_self_as_count": "",
                                "as_override": "",
                                "bidirectional_forwarding_detection": "",
                                "disable_connected_check": "",
                                "disable_peer_as_check": "",
                                "next_hop_self": "",
                                "remove_all_private_as": "",
                                "remove_private_as": "",
                                "replace_private_as_with_local_as": "",
                                "send_community": "",
                                "send_domain_path": "",
                                "send_extended_community": "",
                                "template_name": ""
                            },
                            "send_community": {
                                "description": "Sends the BGP community attribute to a peer.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "send_domain_path": {
                                "description": "Sends the BGP domain path attribute to a peer.  If you want to use the BGP Domain-Path feature for loop prevention, first set the Domain Base ID in the BGP Route Reflector page: System > System Settings > BGP Route Reflector.  Then enable the Send Domain Path field in this page.  If you do not want to use the BGP Domain-Path feature for loop prevention but you still want to send a received domain path, only enable the Send Domain Path field in this page. You do not have to set the Domain Base ID in the BGP Route Reflector page in this case.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "send_extended_community": {
                                "description": "Sends the BGP extended community attribute to a peer.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "template_name": {
                                "description": "Name for this BGP Peer Connectivity Profile Template.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.l3out.eigrpInterfaceProfile": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "eigrp_interface_policy": {
                                "description": "Name for an existing EIGRP Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "eigrp_keychain_policy": {
                                "description": "Name for an existing EIGRP Key Chain Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "description": "",
                                "eigrp_interface_policy": "",
                                "eigrp_keychain_policy": "",
                                "key_id": "",
                                "policy_source_tenant": ""
                            },
                            "policy_source_tenant": {
                                "description": "Name for the tenant in which the EIGRP Policies were created.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "profile_name": ""
                            }
                        }
                    }
                ]
            },
            "tenants.l3out.externalEpg": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "external_epg_template": {
                                "description": "Name of the External EPG Template Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "alias": "",
                                "annotations": "",
                                "description": "",
                                "global_alias": ""
                            },
                            "required_args": {
                                "external_epg_template": "",
                                "l3out": "",
                                "name": "",
                                "site_group": "",
                                "tenant": ""
                            }
                        }
                    }
                ]
            },
            "tenants.l3out.externalEpg.Templates": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "contract_exception_tag": {
                                "description": "The contract exception tag value.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 512,
                                "pattern": "^[\\S]+$",
                                "x-omitempty": true
                            },
                            "flood_on_encapsulation": {
                                "description": "Control at EPG level if the traffic L2 Multicast/Broadcast and Link Local Layer should be flooded only on ENCAP or based on bridg-domain settings.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "disabled",
                                "x-omitempty": true
                            },
                            "intra_epg_isolation": {
                                "description": "Intra-EPG endpoint isolation policies provide full isolation for virtual or physical endpoints; no communication is allowed between endpoints in an EPG that is operating with isolation enforced. Isolation enforced EPGs reduce the number of EPG encapsulations required when many clients access a common service but are not allowed to communicate with each other.",
                                "type": "list_of_values",
                                "enum": [
                                    "enforced",
                                    "unenforced"
                                ],
                                "default": "unenforced",
                                "x-omitempty": true
                            },
                            "l3out_contract_masters": {
                                "description": "L3Out Contract Masters.  Format is tenant:l3out:external_epg.  EPG that will serve as the L3Out Contract Master from which the L3Out EPG will inherit contracts (you must have previously created the contract master L3Out EPG).",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 192,
                                "pattern": "^[a-zA-Z0-9_.:-]+:[a-zA-Z0-9_.:-]+:[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "label_match_criteria": {
                                "description": "Label Match Criteria.",
                                "type": "list_of_values",
                                "enum": [
                                    "All",
                                    "AtleastOne",
                                    "AtmostOne",
                                    "None"
                                ],
                                "default": "AtleastOne",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "contract_exception_tag": "",
                                "l3out_contract_masters": "",
                                "route_control_profiles": ""
                            },
                            "preferred_group_member": {
                                "description": "If an external EPG is marked as a Preferred Group Member, it is put into an internally created contract group where all members of the group are allowed to communicate with each other without requiring a contract between them.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "qos_class": {
                                "description": "The QoS priority class identifier.  QoS priority classes are not inherited with Contract Inheritance.",
                                "type": "list_of_values",
                                "enum": [
                                    "level1",
                                    "level2",
                                    "level3",
                                    "level4",
                                    "level5",
                                    "level6",
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "flood_on_encapsulation": "",
                                "intra_epg_isolation": "",
                                "label_match_criteria": "",
                                "preferred_group_member": "",
                                "qos_class": "",
                                "target_dscp": "",
                                "template_name": ""
                            },
                            "route_control_profiles": {
                                "description": "Name for the Route Control/Map to Associate for Import/Export.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 70,
                                "pattern": "^[a-zA-Z0-9_.:-]+:(export|import)$",
                                "x-omitempty": true
                            },
                            "target_dscp": {
                                "description": "Target DSCP Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "AF11",
                                    "AF12",
                                    "AF13",
                                    "AF21",
                                    "AF22",
                                    "AF23",
                                    "AF31",
                                    "AF32",
                                    "AF33",
                                    "AF41",
                                    "AF42",
                                    "AF43",
                                    "CS0",
                                    "CS1",
                                    "CS2",
                                    "CS3",
                                    "CS4",
                                    "CS5",
                                    "CS6",
                                    "CS7",
                                    "EF",
                                    "VA",
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "template_name": {
                                "description": "Name for this External EPG Template.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.l3out.externalEpg.Subnet": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "aggregate_export": {
                                "description": "Exports all routes of a subnet (0/0 subnets).",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "aggregate_import": {
                                "description": "Imports all routes of a subnet (0/0 subnets).",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "aggregate_shared_routes": {
                                "description": "Available if you select Shared Route Control Subnet above. When a route is learned in one VRF that needs to be leaked into another VRF, the routes can be leaked by matching the subnet exactly, or can be leaked in an aggregate way according to a subnet mask.  Note:  For aggregate shared routes, multiple subnet masks can be used to determine which specific route groups are leaked between VRFs (for example, 10.1.0.0/16), or 0/0 can be used to share all subnet routes across multiple VRFS.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "export_route_control_subnet": {
                                "description": "Controls which external networks are advertised out of the fabric using route-maps and IP prefix lists. An IP prefix list is created on the border leaf switch for each subnet that is defined. The export control policy is enabled by default and is supported for BGP, EIGRP, and OSPF.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "external_epg": {
                                "description": "Name of the External EPG to assign these subnets to.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "external_subnets_for_external_epg": {
                                "description": "A classifier for the external EPG, similar to an Access Control List (ACL). The rules and contracts in the external EPG apply at the VRF level to networks matching this subnet.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "import_route_control_subnet": {
                                "description": "Controls the subnets allowed into the fabric, and can include set and match rules to filter routes. Supported for BGP and OSPF, but not for EIGRP; if the user enables the import control policy for an unsupported protocol, it will be automatically ignored. The import control policy is not enabled by default, but you can enable it by navigating to the configured L3Out. Click the Policy/Main tabs to display the Properties window for the configured L3Out, then check the box next to Route Control Enforcement: Import.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "route_control_profiles": "",
                                "route_summarization_policy": ""
                            },
                            "required_args": {
                                "aggregate_export": "",
                                "aggregate_import": "",
                                "aggregate_shared_routes": "",
                                "export_route_control_subnet": "",
                                "external_epg": "",
                                "external_subnets_for_external_epg": "",
                                "import_route_control_subnet": "",
                                "l3out": "",
                                "shared_route_control_subnet": "",
                                "shared_security_import_subnet": "",
                                "site_group": "",
                                "subnets": "",
                                "tenant": ""
                            },
                            "route_control_profiles": {
                                "description": "Name for the Route Control/Map to Associate for Import/Export.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 70,
                                "pattern": "^[a-zA-Z0-9_.:-]+:(export|import)$",
                                "x-omitempty": true
                            },
                            "route_summarization_policy": {
                                "description": "Name of an existing BGP Route Summarization Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "shared_route_control_subnet": {
                                "description": "Controls which external prefixes are advertised to other VRFs, which have a contract interface for shared L3Out services.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "shared_security_import_subnet": {
                                "description": "Configures the classifier for the subnets in the VRF where the routes are leaked.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "subnets": {
                                "description": "List of Subnets to assign to the External EPG.",
                                "type": "list_of_hosts",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.l3out.ospfInterfaceProfile": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "auth_type": {
                                "description": "The OSPF authentication type. Authentication enables the flexibility to authenticate OSPF neighbors. You can enable authentication in OSPF to exchange routing update information in a secure manner. Note that when you configure authentication, you must configure an entire area with the same type of authentication. The authentication types are:  * None—No authentication is used.  * Simple—You need to put in an AuthKey in the interface section for each interface in the area.  * Md5—The password does not pass over the network. MD5 is a message-digest algorithm specified in RFC 1321. MD5 is considered the most secure OSPF authentication mode. When you configure authentication, you must configure an entire area with the same type of authentication.  * The default is None.",
                                "type": "list_of_values",
                                "enum": [
                                    "md5",
                                    "none",
                                    "simple"
                                ],
                                "default": "none",
                                "x-omitempty": true
                            },
                            "key_id": {
                                "description": "OSPF Key Identifier.",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 5,
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "description": "",
                                "key_id": "",
                                "ospf_interface_policy": ""
                            },
                            "ospf_interface_policy": {
                                "description": "Name for an existing OSPF Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "auth_type": "",
                                "template_name": ""
                            },
                            "template_name": {
                                "description": "Name for this L3Out - OSPF Routing Template.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.l3out.ospfRoutingProfile": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "optional_args": {
                            },
                            "originate_summary_lsa": {
                                "description": "Flag to Advertise the Interface Subnet into OSPF.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "ospf_area_id": {
                                "description": "The OSPF Area ID. An area is a logical collection of OSPF networks, routers, and links that have the same area identification. A router within an area must maintain a topological database for the area to which it belongs. The router doesn't have detailed information about network topology outside of its area, thereby reducing the size of its database. Areas limit the scope of route information distribution. It is not possible to do route update filtering within an area. The link-state database (LSDB) of routers within the same area must be synchronized and be exactly the same; however, route summarization and filtering is possible between different areas. The main benefit of creating areas is a reduction in the number of routes to propagate-by the filtering and the summarization of routes. Areas are identified by an area ID. Cisco IOS software supports area IDs expressed in IP address format or decimal format, for example, area 0.0.0.0 is equal to area 0.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^(backbone|[\\d]{1,9}|[0-3][\\d]{9}|4[0-2][\\d][0-6][0-7][0-2][\\d][0-5]|((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4})$",
                                "x-omitempty": true
                            },
                            "ospf_area_cost": {
                                "description": "The OSPF area cost. The range is from 0 to 16777215. The default is 1.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 16777215,
                                "default": 1,
                                "x-omitempty": true
                            },
                            "ospf_area_type": {
                                "description": "Enable or disable reflective relay for ports that consume the policy.",
                                "type": "list_of_values",
                                "enum": [
                                    "nssa",
                                    "regular",
                                    "stub"
                                ],
                                "default": "regular",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "originate_summary_lsa": "",
                                "ospf_area_cost": "",
                                "ospf_area_id": "",
                                "ospf_area_type": "",
                                "send_redistribution_lsas_into_nssa_area": "",
                                "suppress_forwarding_address": "",
                                "template_name": ""
                            },
                            "send_redistribution_lsas_into_nssa_area": {
                                "description": "Flag to Advertise the Interface Subnet into OSPF.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "suppress_forwarding_address": {
                                "description": "Flag to Advertise the Interface Subnet into OSPF.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "template_name": {
                                "description": "Name for this L3Out - OSPF Routing Template.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.l3out.logicalNodeInterfaceProfile": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "bgp_password": {
                                "description": "BGP Password length and regex.",
                                "minimum": 2,
                                "maximum": 255,
                                "pattern": "^[\\S+]{2,255}$"
                            },
                            "bgp_peers": {
                                "description": "A List of BGP Peer Addresses.  This will define the Neighbor relationships for the Interface.",
                                "type": "list_of_hosts",
                                "x-omitempty": true
                            },
                            "bgp_template": {
                                "description": "Name for the BGP Template to Attach to the Interface Template.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "eigrp_interface_profile": {
                                "description": "Name for a OSPF Interface Profile Template defined in the worksheet.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "interface_config_template": {
                                "description": "Name for the Logical Node Interface Configuration Template defined in the worksheet.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "interface_template": {
                                "description": "Name for the Logical Node Interface Profile Template defined in the worksheet.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "node_profile": {
                                "description": "Name of the Node Profile.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "alias": "",
                                "bgp_password": "",
                                "bgp_peers": "",
                                "bgp_template": "",
                                "description": "",
                                "eigrp_interface_profile": "",
                                "ospf_interface_profile": ""
                            },
                            "ospf_interface_profile": {
                                "description": "Name for a OSPF Interface Profile Template defined in the worksheet.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "interface_config_template": "",
                                "interface_template": "",
                                "l3out": "",
                                "name": "",
                                "node_profile": "",
                                "site_group": "",
                                "tenant": ""
                            }
                        }
                    }
                ]
            },
            "tenants.l3out.logicalNodeInterfaceProfile.InterfaceConfiguration": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "auto_state": {
                                "description": "The possible options are as follows: * disabled: When this value is selected, SVI remains in the up state when the auto state value is disabled. The SVI remains active even if no interfaces are operational in the corresponding VLAN/s.  * enabled: When this value is selected, SVI depends on the port members in associated VLANs. When a VLAN interface has multiple ports in the VLAN, the SVI goes to the down state when all the ports in the VLAN go down.  * The default value is disabled.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "enabled",
                                "x-omitempty": true
                            },
                            "encap_scope": {
                                "description": "The scope of the encapsulation used for the Layer 3 Out profile. The scope can be as follows:  * ctx —  Same transit VLAN in all Layer 3 Outs in the same VRF for a given VLAN encapsulation. This is a global value.  * local — A unique transit VLAN per Layer 3 Out. This is the default value.",
                                "type": "list_of_values",
                                "enum": [
                                    "ctx",
                                    "local"
                                ],
                                "default": "local",
                                "x-omitempty": true
                            },
                            "encap_vlan": {
                                "description": "VLAN Tag.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 4095,
                                "default": null,
                                "x-omitempty": true
                            },
                            "interface_or_policy_group": {
                                "description": "Physical Interface or Interface Policy Group for port-channel/vpc interfaces.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^([a-zA-Z0-9_.:-]+|eth[\\d]+/[\\d]+)$",
                                "x-omitempty": true
                            },
                            "interface_type": {
                                "description": "Defines the Type of Interface to Create.",
                                "type": "list_of_values",
                                "enum": [
                                    "ext-svi",
                                    "l3-port",
                                    "sub-interface"
                                ],
                                "default": "l3-port",
                                "x-omitempty": true
                            },
                            "ipv6_dad": {
                                "description": "Duplicate Address Detection (DAD) is a process that is used by Neighbor Discovery to detect the duplicated addresses in the network. By default, DAD is enabled for the link-local and global-subnet IPv6 addresses used on the Cisco ACI fabric leaf Layer 3 interfaces. Change this setting when the same shared secondary address is required to be used across L3Outs on different border leaf switches to provide border leaf redundancy to the external connected devices. Disabling the DAD process in this case will avoid the situation where the DAD considers the same shared secondary address on multiple border leaf switches as duplicates. If you do not disable the DAD process in this case, the shared secondary address might enter into the DUPLICATE DAD state and become unusable.  For these situations, use the following settings:  * For the primary address, set the value for the DAD entry to enabled.  * For the shared secondary address, set the value for the DAD entry to disabled. If the secondary address is not shared across border leaf switches, then you do not need to disable the DAD for that address.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "enabled",
                                "x-omitempty": true
                            },
                            "link_local_addresses": {
                                "description": "A List of IPv6 link local addresses.  Only need two if this is an SVI Interface.",
                                "type": "list_of_hosts",
                                "x-omitempty": true
                            },
                            "mac_address": {
                                "description": "Custom MAC Address to apply to the Interface Configuration.",
                                "type": "mac_address",
                                "x-omitempty": true
                            },
                            "mode": {
                                "description": "The mode of the static association with the path. EPG tagging refers to configuring a static path under an EPG. The mode can be:  * trunk — The default deployment mode. Select this mode if the traffic from the host is tagged with a VLAN ID.  * access (802.1P) — Select this mode if the traffic from the host is tagged with a 802.1P tag. When an access port is configured with a single EPG in native 802.1p mode, its packets exit that port untagged. When an access port is configured with multiple EPGs, one in native 802.1p mode, and some with VLAN tags, all packets exiting that access port are tagged VLAN 0 for EPG configured in native 802.1p mode and for all other EPGs packets exit with their respective VLAN tags.  * Note: Only one native 802.1p EPG is allowed per access port.  The default is 'trunk'.",
                                "type": "list_of_values",
                                "enum": [
                                    "access",
                                    "trunk"
                                ],
                                "default": "trunk",
                                "x-omitempty": true
                            },
                            "mtu": {
                                "description": "The maximum transmit unit of the external network. The range is 1500 to 9216 or inherit.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 7,
                                "pattern": "^(inherit|1[5-9][\\d]{2}|[2-8][\\d]{3}|9[0-1][\\d]{2}|92[0-1][0-6])$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "description": "",
                                "link_local_addresses": "",
                                "mac_address": "",
                                "secondary_addresses": ""
                            },
                            "primary_preferred_addresses": {
                                "description": "IPv(4|6)/Prefix to assign to the Logical Interface Profile.  If this is a VPC then assign an IP address to SideB as well.",
                                "type": "list_of_hosts",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "auto_state": "",
                                "encap_scope": "",
                                "encap_vlan": "",
                                "interface_or_policy_group": "",
                                "interface_type": "",
                                "ipv6_dad": "",
                                "mode": "",
                                "mtu": "",
                                "primary_preferred_addresses": "",
                                "target_dscp": "",
                                "template_name": ""
                            },
                            "secondary_addresses": {
                                "description": "A List of Secondary Addresses.",
                                "type": "list_of_hosts",
                                "x-omitempty": true
                            },
                            "target_dscp": {
                                "description": "Target DSCP Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "AF11",
                                    "AF12",
                                    "AF13",
                                    "AF21",
                                    "AF22",
                                    "AF23",
                                    "AF31",
                                    "AF32",
                                    "AF33",
                                    "AF41",
                                    "AF42",
                                    "AF43",
                                    "CS0",
                                    "CS1",
                                    "CS2",
                                    "CS3",
                                    "CS4",
                                    "CS5",
                                    "CS6",
                                    "CS7",
                                    "EF",
                                    "VA",
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "template_name": {
                                "description": "Name for this Node Interface Configuration Template.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.l3out.logicalNodeInterfaceProfile.Templates": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "custom_qos_policy": {
                                "description": "Name for an Existing Custom QoS Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "data_plane_policing_egress": {
                                "description": "Name for an Data Plane Policing Policy.  Use data plane policing (DPP) to manage bandwidth consumption on ACI fabric access interfaces. DPP policies can apply to egress traffic, ingress traffic, or both.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "data_plane_policing_ingress": {
                                "description": "Name for an Data Plane Policing Policy.  Use data plane policing (DPP) to manage bandwidth consumption on ACI fabric access interfaces. DPP policies can apply to egress traffic, ingress traffic, or both.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "igmp_policy": {
                                "description": "Name for an IGMP Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "nd_policy": {
                                "description": "Name for a Neighbor Discovery Policy.  The neighbor discovery interface policy defines a common configuration that will apply to one or more neighbor discovery interfaces.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "pim_interface_policy": {
                                "description": "Name for a PIMv4 Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "pimv6_interface_policy": {
                                "description": "Name for a PIMv6 Interface Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "custom_qos_policy": "",
                                "data_plane_policing_egress": "",
                                "data_plane_policing_ingress": "",
                                "igmp_policy": "",
                                "nd_policy": "",
                                "netflow_monitor_policies": "",
                                "pim_interface_policy": "",
                                "pimv6_interface_policy": ""
                            },
                            "qos_class": {
                                "description": "The QoS priority class identifier.  QoS priority classes are not inherited with Contract Inheritance.",
                                "type": "list_of_values",
                                "enum": [
                                    "level1",
                                    "level2",
                                    "level3",
                                    "level4",
                                    "level5",
                                    "level6",
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "qos_class": "",
                                "template_name": ""
                            },
                            "target_dscp": {
                                "description": "Target DSCP Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "AF11",
                                    "AF12",
                                    "AF13",
                                    "AF21",
                                    "AF22",
                                    "AF23",
                                    "AF31",
                                    "AF32",
                                    "AF33",
                                    "AF41",
                                    "AF42",
                                    "AF43",
                                    "CS0",
                                    "CS1",
                                    "CS2",
                                    "CS3",
                                    "CS4",
                                    "CS5",
                                    "CS6",
                                    "CS7",
                                    "EF",
                                    "VA",
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "template_name": {
                                "description": "Name for this L3Out Template.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.l3out.logicalNodeProfile": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "color_tag": {
                                "description": "Specifies the color of a policy label.",
                                "type": "list_of_values",
                                "enum": [
                                    "alice-blue",
                                    "antique-white",
                                    "aqua",
                                    "aquamarine",
                                    "azure",
                                    "beige",
                                    "bisque",
                                    "black",
                                    "blanched-almond",
                                    "blue",
                                    "blue-violet",
                                    "brown",
                                    "burlywood",
                                    "cadet-blue",
                                    "chartreuse",
                                    "chocolate",
                                    "coral",
                                    "cornflower-blue",
                                    "cornsilk",
                                    "crimson",
                                    "cyan",
                                    "dark-blue",
                                    "dark-cyan",
                                    "dark-goldenrod",
                                    "dark-gray",
                                    "dark-green",
                                    "dark-khaki",
                                    "dark-magenta",
                                    "dark-olive-green",
                                    "dark-orange",
                                    "dark-orchid",
                                    "dark-red",
                                    "dark-salmon",
                                    "dark-sea-green",
                                    "dark-slate-blue",
                                    "dark-slate-gray",
                                    "dark-turquoise",
                                    "dark-violet",
                                    "deep-pink",
                                    "deep-sky-blue",
                                    "dim-gray",
                                    "dodger-blue",
                                    "fire-brick",
                                    "floral-white",
                                    "forest-green",
                                    "fuchsia",
                                    "gainsboro",
                                    "ghost-white",
                                    "gold",
                                    "goldenrod",
                                    "gray",
                                    "green",
                                    "green-yellow",
                                    "honeydew",
                                    "hot-pink",
                                    "indian-red",
                                    "indigo",
                                    "ivory",
                                    "khaki",
                                    "lavender",
                                    "lavender-blush",
                                    "lawn-green",
                                    "lemon-chiffon",
                                    "light-blue",
                                    "light-coral",
                                    "light-cyan",
                                    "light-goldenrod-yellow",
                                    "light-gray",
                                    "light-green",
                                    "light-pink",
                                    "light-salmon",
                                    "light-sea-green",
                                    "light-sky-blue",
                                    "light-slate-gray",
                                    "light-steel-blue",
                                    "light-yellow",
                                    "lime",
                                    "lime-green",
                                    "linen",
                                    "magenta",
                                    "maroon",
                                    "medium-aquamarine",
                                    "medium-blue",
                                    "medium-orchid",
                                    "medium-purple",
                                    "medium-sea-green",
                                    "medium-slate-blue",
                                    "medium-spring-green",
                                    "medium-turquoise",
                                    "medium-violet-red",
                                    "midnight-blue",
                                    "mint-cream",
                                    "misty-rose",
                                    "moccasin",
                                    "navajo-white",
                                    "navy",
                                    "old-lace",
                                    "olive",
                                    "olive-drab",
                                    "orange",
                                    "orange-red",
                                    "orchid",
                                    "pale-goldenrod",
                                    "pale-green",
                                    "pale-turquoise",
                                    "pale-violet-red",
                                    "papaya-whip",
                                    "peachpuff",
                                    "peru",
                                    "pink",
                                    "plum",
                                    "powder-blue",
                                    "purple",
                                    "red",
                                    "rosy-brown",
                                    "royal-blue",
                                    "saddle-brown",
                                    "salmon",
                                    "sandy-brown",
                                    "sea-green",
                                    "seashell",
                                    "sienna",
                                    "silver",
                                    "sky-blue",
                                    "slate-blue",
                                    "slate-gray",
                                    "snow",
                                    "spring-green",
                                    "steel-blue",
                                    "tan",
                                    "teal",
                                    "thistle",
                                    "tomato",
                                    "turquoise",
                                    "violet",
                                    "wheat",
                                    "white",
                                    "white-smoke",
                                    "yellow",
                                    "yellow-green"
                                ],
                                "default": "yellow-green",
                                "x-omitempty": true
                            },
                            "node_list": {
                                "description": "List of Node Identifiers to add to the Node Profile.  The distinguished name for the node attached to the layer 3 outside profile. The maximum supported string length is 255 ASCII characters.",
                                "type": "list_of_integer",
                                "format": "int64",
                                "minimum": 101,
                                "maximum": 4000,
                                "default": 201,
                                "x-omitempty": true
                            },
                            "node_router_ids": {
                                "description": "A List of Node Router identifiers.  The router IP address used as the OSPF/BGP router ID.",
                                "type": "list_of_hosts",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "alias": "",
                                "description": ""
                            },
                            "required_args": {
                                "color_tag": "",
                                "l3out": "",
                                "name": "",
                                "node_list": "",
                                "node_router_ids": "",
                                "pod_id": "",
                                "site_group": "",
                                "target_dscp": "",
                                "tenant": "",
                                "use_router_id_as_loopback": ""
                            },
                            "target_dscp": {
                                "description": "Target DSCP Values.",
                                "type": "list_of_values",
                                "enum": [
                                    "AF11",
                                    "AF12",
                                    "AF13",
                                    "AF21",
                                    "AF22",
                                    "AF23",
                                    "AF31",
                                    "AF32",
                                    "AF33",
                                    "AF41",
                                    "AF42",
                                    "AF43",
                                    "CS0",
                                    "CS1",
                                    "CS2",
                                    "CS3",
                                    "CS4",
                                    "CS5",
                                    "CS6",
                                    "CS7",
                                    "EF",
                                    "VA",
                                    "unspecified"
                                ],
                                "default": "unspecified",
                                "x-omitempty": true
                            },
                            "use_router_id_as_loopback": {
                                "description": "Flag to add the Router ID as a Loopback.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.ndoSchemas": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "create": {
                                "description": "Flag to Determine if the Object Should be created on the controller.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "ndo_settings": {
                                "description": "Name for this NDO Schema Policy to Associate to BD's, EPG's, etc.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "create": "",
                                "description": "",
                                "sites": "",
                                "template": "",
                                "vrf_schema": "",
                                "vrf_template": ""
                            },
                            "required_args": {
                                "ndo_settings": "",
                                "schema": ""
                            },
                            "schema": {
                                "description": "Name of the Schema to Create.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "sites": {
                                "description": "Names of Sites to Associate to the Template.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "template": {
                                "description": "Name of the Template to Assign to the Schema.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "vrf_schema": {
                                "description": "Name for the VRF Schema.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "vrf_template": {
                                "description": "Name for VRF Template.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.policies.bgpPrefix": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "action": {
                                "description": "The action to be performed when the maximum prefix limit is reached.",
                                "type": "list_of_values",
                                "enum": [
                                    "log", 
                                    "restart", 
                                    "shut"
                                ],
                                "default": "log",
                                "x-omitempty": true
                            },
                            "maximum_number_of_prefixes": {
                                "description": "Maximum number of prefixes allowed from the peer.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 300000,
                                "default": 20000,
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "description": ""
                            },
                            "required_args": {
                                "action": "",
                                "maximum_number_of_prefixes": "",
                                "name": "",
                                "restart_time": "",
                                "site_group": "",
                                "tenant": "",
                                "threshold": ""
                            },
                            "restart_time": {
                                "description": "The period of time in minutes before restarting the peer when the prefix limit is reached.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 65535,
                                "default": 65535,
                                "x-omitempty": true
                            },
                            "threshold": {
                                "description": "The threshold percentage of the maximum number of prefixes before a warning is issued. For example, if the maximum number of prefixes is 10 and the threshold is 70%, a warning is issued when the number of prefixes exceeds 7 (70%). The value is a percentage, from 1 to 100%.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 100,
                                "default": 75,
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.policies.dhcpRelay": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "addresses": {
                                "description": "The server IP addresses.",
                                "type": "list_of_hosts",
                                "x-omitempty": true
                            },
                            "application_profile": {
                                "description": "The Name of an Existing Application Profile, if epg_type is application_epg.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "epg": {
                                "description": "The Name of an Existing Application EPG or External EPG.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "epg_type": {
                                "description": "The Type of EPG to assign to the DHCP relay Provider.",
                                "type": "list_of_values",
                                "enum": [
                                    "application_epg", 
                                    "external_epg"
                                ],
                                "default": "application_epg",
                                "x-omitempty": true
                            },
                            "l3out": {
                                "description": "Name of parent L3Out object, if epg_type is external_epg.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "mode": {
                                "description": "DHCP relay policy mode.",
                                "type": "list_of_values",
                                "enum": [
                                    "visible", 
                                    "not-visible"
                                ],
                                "default": "visible",
                                "x-omitempty": true
                            },
                            "names": {
                                "description": "The Name(s) of the DHCP Relay Policies.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "application_profile": "",
                                "description": "",
                                "l3out": ""
                            },
                            "owner": {
                                "description": "Owner of the target relay servers.",
                                "type": "list_of_values",
                                "enum": [
                                    "infra", 
                                    "tenant"
                                ],
                                "default": "infra",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "addresses": "",
                                "epg": "",
                                "epg_type": "",
                                "mode": "",
                                "names": "",
                                "owner": "",
                                "site_group": "",
                                "tenant": ""
                            }
                        }
                    }
                ]
            },
            "tenants.policies.ospfInterface": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "advertise_subnet": {
                                "description": "Flag to Advertise the Interface Subnet into OSPF.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "bfd": {
                                "description": "Flag to enable BFD on the Interface for OSPF.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "cost_of_interface": {
                                "description": "The OSPF cost for the interface. The cost (also called metric) of an interface in OSPF is an indication of the overhead required to send packets across a certain interface. The cost of an interface is inversely proportional to the bandwidth of that interface. A higher bandwidth indicates a lower cost. There is more overhead (higher cost) and time delays involved in crossing a 56k serial line than crossing a 10M ethernet line. The formula used to calculate the cost is: cost= 10000 0000/bandwidth in bps For example, it will cost 10 EXP8/10 EXP7 = 10 to cross a 10M Ethernet line and will cost 10 EXP8/1544000 = 64 to cross a T1 line. By default, the cost of an interface is calculated based on the bandwidth; you can force the cost of an interface with the ip ospf cost value interface sub-configuration mode command. Allowed value range is 0-65535.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 65535,
                                "default": 0,
                                "x-omitempty": true
                            },
                            "dead_interval": {
                                "description": "The interval between hello packets from a neighbor before the router declares the neighbor as down. This value must be the same for all networking devices on a specific network. Specifying a smaller dead interval (seconds) will give faster detection of a neighbor being down and improve convergence, but might cause more routing instability.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 65535,
                                "default": 40,
                                "x-omitempty": true
                            },
                            "hello_interval": {
                                "description": "The interval between hello packets that OSPF sends on the interface. Note that the smaller the hello interval, the faster topological changes will be detected, but more routing traffic will ensue. This value must be the same for all routers and access servers on a specific network.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 65535,
                                "default": 10,
                                "x-omitempty": true
                            },
                            "mtu_ignore": {
                                "description": "Flag to ignore the MTU for the Neighbor Establishment.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "network_type": {
                                "description": "The OSPF interface policy network type. OSPF supports point-to-point and broadcast.",
                                "type": "list_of_values",
                                "enum": [
                                    "bcast", 
                                    "p2p"
                                ],
                                "default": "bcast",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "description": ""
                            },
                            "passive_interface": {
                                "description": "Add the Interface to OSPF but not build neighbor relationships on the Interface.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "priority": {
                                "description": "The OSPF interface priority used to determine the designated router (DR) on a specific network. The router with the highest OSPF priority on a segment will become the DR for that segment. The same process is repeated for the backup designated router (BDR). In the case of a tie, the router with the highest RID will win.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "maximum": 255,
                                "default": 1,
                                "x-omitempty": true
                            },
                            "required_args": {
                                "advertise_subnet": "",
                                "bfd": "",
                                "cost_of_interface": "",
                                "dead_interval": "",
                                "hello_interval": "",
                                "mtu_ignore": "",
                                "name": "",
                                "network_type": "",
                                "passive_interface": "",
                                "priority": "",
                                "retransmit_interval": "",
                                "site_group": "",
                                "tenant": "",
                                "transmit_delay": ""
                            },
                            "retransmit_interval": {
                                "description": "The interval between LSA retransmissions. The retransmit interval occurs while the router is waiting for an acknowledgement from the neighbor router that it received the LSA. If no acknowlegment is received at the end of the interval, then the LSA is resent",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 65535,
                                "default": 5,
                                "x-omitempty": true
                            },
                            "transmit_delay": {
                                "description": "The delay time needed to send an LSA update packet. OSPF increments the LSA age time by the transmit delay amount before transmitting the LSA update. You should take into account the transmission and propagation delays for the interface when you set this value.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1,
                                "maximum": 450,
                                "default": 1,
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.Sites": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "aws_access_key_id": {
                                "description": "AWS Access Key Idenitifier.",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 5,
                                "x-omitempty": true
                            },
                            "aws_account_id": {
                                "description": "AWS Account Id.",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 5,
                                "x-omitempty": true
                            },
                            "azure_access_type": {
                                "description": "Type of Azure Account Configuration.",
                                "type": "list_of_values",
                                "enum": [
                                    "credentials",
                                    "managed",
                                    "shared"
                                ],
                                "default": "managed",
                                "x-omitempty": true
                            },
                            "azure_active_directory_id": {
                                "description": "Azure Active Directory Idenitifier.",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 5,
                                "x-omitempty": true
                            },
                            "azure_application_id": {
                                "description": "Azure Application Idenitifier.",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 5,
                                "x-omitempty": true
                            },
                            "azure_shared_account_id": {
                                "description": "Azure Shared Account Idenitifier.",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 5,
                                "x-omitempty": true
                            },
                            "azure_subscription_id": {
                                "description": "Azure Subscriptin Idenitifier.",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 5,
                                "x-omitempty": true
                            },
                            "is_aws_account_trusted": {
                                "description": "",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "name": {
                                "description": "Name of the Site.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "aws_access_key_id": "",
                                "aws_account_id": "",
                                "azure_access_type": "",
                                "azure_active_directory_id": "",
                                "azure_application_id": "",
                                "azure_shared_account_id": "",
                                "azure_subscription_id": "",
                                "is_aws_account_trusted": ""
                            },
                            "required_args": {
                                "name": ""
                            }
                        }
                    }
                ]
            },
            "tenants.Tenants": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "create": {
                                "description": "Flag to Determine if the Object Should be created on the controller.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "ndo_settings": {
                                "description": "Names of NDO Settings Policies.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "alias": "",
                                "annotations": "",
                                "create": "",
                                "description": "",
                                "global_alias": "",
                                "ndo_settings": "",
                                "users": ""
                            },
                            "required_args": {
                                "name": "",
                                "site_group": ""
                            },
                            "users": {
                                "description": "Names of the Users to associate to the Tenant.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.vrf.Community": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "community_variable": {
                                "description": "Communtiy Variable Check.",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 5,
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "description": ""
                            },
                            "required_args": {
                                "community_variable": "",
                                "site_group": "",
                                "tenant": "",
                                "vrf": ""
                            }
                        }
                    }
                ]
            },
            "tenants.vrf.Templates": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "bd_enforcement_status": {
                                "description": "Only allow endpoints to ping their bridge domain gateways.  Ping from hosts on different bridge domains cannot ping other gateways.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "bgp_timers": {
                                "description": "Name of the BGP Timer Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "bgp_timers_per_address_family": {
                                "description": "Group of BGP per Address Family Timers Policies.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "eigrp_timers_per_address_family": {
                                "description": "Group of the EIGRP per Address Family Timers Policies.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "endpoint_retention_policy": {
                                "description": "Name of the Endpoint Retention Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "ip_data_plane_learning": {
                                "description": "Defines if IP addresses are learned through dataplane packets for the VRF.",
                                "type": "list_of_values",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "default": "enabled",
                                "x-omitempty": true
                            },
                            "monitoring_policy": {
                                "description": "Name of the Monitoring Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "bgp_timers": "",
                                "bgp_timers_per_address_family": "",
                                "eigrp_timers_per_address_family": "",
                                "endpoint_retention_policy": "",
                                "monitoring_policy": "",
                                "ospf_timers_per_address_family": "",
                                "ospf_timers": "",
                                "transit_route_tag_policy": ""
                            },
                            "ospf_timers_per_address_family": {
                                "description": "Group of the OSPF per Address Family Timers Policies.",
                                "type": "list_of_string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "ospf_timers": {
                                "description": "Name of the OSPF Timer Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "policy_control_enforcement_direction": {
                                "description": "Defines the policy enforcement direction coming to or from a Layer 3 Outside connection (L3Out)",
                                "type": "list_of_values",
                                "enum": [
                                    "egress",
                                    "ingress"
                                ],
                                "default": "ingress",
                                "x-omitempty": true
                            },
                            "policy_control_enforcement_preference": {
                                "description": "The preferred security policy control. ",
                                "type": "list_of_values",
                                "enum": [
                                    "enforced",
                                    "unenforced"
                                ],
                                "default": "enforced",
                                "x-omitempty": true
                            },
                            "required_args": {
                                "bd_enforcement_status": "",
                                "ip_data_plane_learning": "",
                                "policy_control_enforcement_direction": "",
                                "policy_control_enforcement_preference": "",
                                "template_name": ""
                            },
                            "template_name": {
                                "description": "Name of the VRF Template.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "transit_route_tag_policy": {
                                "description": "Name of the Transit Route Tag Policy.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            },
            "tenants.Vrfs": {
                "allOf": [
                    {},
                    {
                        "properties": {
                            "create": {
                                "description": "Flag to Determine if the Object Should be created on the controller.",
                                "type": "boolean",
                                "default": true,
                                "x-omitempty": true
                            },
                            "layer3_multicast": {
                                "description": "",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "ndo_settings": {
                                "description": "Name of the NDO Settings Policy to Associate to the VRF.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            },
                            "optional_args": {
                                "alias": "",
                                "annotations": "",
                                "create": "",
                                "description": "",
                                "global_alias": "",
                                "ndo_settings": ""
                            },
                            "preferred_group": {
                                "description": "Enable the Preferred Group feature to allow preferred group members in the VRF to communicate with each other without requiring a contract between them.",
                                "type": "boolean",
                                "default": false,
                                "x-omitempty": true
                            },
                            "required_args": {
                                "layer3_multicast": "",
                                "name": "",
                                "preferred_group": "",
                                "site_group": "",
                                "tenant": "",
                                "vrf_template": ""
                            },
                            "vrf_template": {
                                "description": "Name of the VRF Template.",
                                "type": "string",
                                "minimum": 1,
                                "maximum": 64,
                                "pattern": "^[a-zA-Z0-9_.:-]+$",
                                "x-omitempty": true
                            }
                        }
                    }
                ]
            }
        }
    }
}